import {d as create_custom_element,e as push,Y as append_styles,f as prop,b as state,p as proxy,aH as SvelteMap,Z as onMount,u as user_effect,z as comment,A as first_child,aI as await_block,D as append,i as pop,j as flush_sync,c as get,a as set,aJ as component,J as template,v as untrack,F as derived,aK as sibling,ad as bind_this,aL as each,aM as flattenDeep} from "./dgos-1017-vendor.js";import {I as ImageryStyle,p as parseCsvToMappingPoints,a as parseCsvToModels,T as TimeController,C as Camera,b as TerrainTileset,B as BaseImageryTileset,M as Model} from "./dgos-1017-core.js";import {s as styles} from "./dgos-1017-cesium.js";var root_3 = template(atob("PCE+IDwhPiA8IT4gPCE+IDwhPg=="),1);var root_5 = template(`<div id="Loading" class="svelte-1hyk4g"><span class="loader svelte-1hyk4g"></span></div>`);const $$css = {hash: "svelte-1hyk4g",code: "#Loading.svelte-1hyk4g {position:absolute;width:100%;height:100%;display:flex;justify-content:center;align-items:center;z-index:1000;background:rgb(0,0,0);}.loader.svelte-1hyk4g {width:48px;height:48px;border:5px dotted #fff;border-radius:50%;display:inline-block;position:relative;box-sizing:border-box;\n animation: svelte-1hyk4g-rotation 2s linear infinite;}\n\n @keyframes svelte-1hyk4g-rotation {\n 0% {\n transform: rotate(0deg);\n}\n 100% {\n transform: rotate(360deg);\n}\n}"};function FkBase($$anchor,$$props) {push($$props,true);append_styles($$anchor,$$css);let markerscsv = prop($$props,"markerscsv",7),imagerytype = prop($$props,"imagerytype",23,() => ImageryStyle.AERIAL);let viewerReady = state(false);let viewer = state(void 0);let camera = state(void 0);let tmpCameraStatus = state(void 0);let parsedMarkers = state(proxy([]));let markersMap = state(proxy(new SvelteMap()));let parsedModels = state(proxy([]));let ready = derived(() => get(viewerReady));let selectedId = state(void 0);onMount(() => {window.CESIUM_BASE_URL = atob("aHR0cHM6Ly9jZXNpdW0uY29tL2Rvd25sb2Fkcy9jZXNpdW1qcy9yZWxlYXNlcy8xLjEzNC9CdWlsZC9DZXNpdW0v");const style = document.createElement("style");style.textContent = styles;const root = $$props.$$host.shadowRoot || $$props.$$host;root.appendChild(style);});user_effect(() => {if (!get(camera) || !get(tmpCameraStatus)) return;untrack(() => {var _a,_b,_c;get(camera).setCameraStatus({coordinate: {longitude: get(tmpCameraStatus)[0],latitude: get(tmpCameraStatus)[1],height: ((_a = get(tmpCameraStatus)) == null ? void 0 : _a[2]) || 0},orientation: {heading: ((_b = get(tmpCameraStatus)) == null ? void 0 : _b[3]) || 0,pitch: ((_c = get(tmpCameraStatus)) == null ? void 0 : _c[4]) || 90}});set(tmpCameraStatus,void 0);});});user_effect(() => {if (markerscsv()) {set(parsedMarkers,proxy(parseCsvToMappingPoints(markerscsv())));untrack(() => {get(markersMap).clear();get(parsedMarkers).forEach((marker) => {get(markersMap).set(marker.id,marker);});});} else {set(parsedMarkers,proxy([]));get(markersMap).clear();}});user_effect(() => {if (markerscsv()) {set(parsedModels,proxy(parseCsvToModels(markerscsv())));} else {set(parsedModels,proxy([]));}});user_effect(() => {if (!get(ready)) return;onLoad();});user_effect(() => {emitEvent("selected",get(selectedId));});function onLoad() {setTimeout(() => {emitEvent("ready");});} function cameraOnChange({coordinate,orientation}) {const correctedHeading = orientation.heading;const values = flattenDeep(Object.values(coordinate)).concat([correctedHeading,orientation.pitch]);const roundedValues = values.map((v) => typeof v === "number" ? parseFloat(v.toFixed(6)) : v);emitEvent("camerastatus",roundedValues);} function setCameraStatus(status) {set(tmpCameraStatus,proxy(status));} function flyToId(id) {if (!get(camera)) return;get(camera).flyToTarget(id,{duration: 3,orientation: {heading: 0,pitch: 45},range: 500});} async function getMarkers() {await new Promise((resolve) => setTimeout(resolve,100));return get(parsedMarkers);} function emitEvent(name,detail) {$$props.$$host.dispatchEvent(new CustomEvent(name,{detail,bubbles: true,composed: true}));} var fragment = comment();var node = first_child(fragment);await_block( node,() => import("./dgos-1017-core.js").then((n) => n.i),($$anchor2) => {var div = root_5();append($$anchor2,div);},($$anchor2,$$source) => {var $$value = derived(() => {var {default: CesiumCoreView2} = get($$source);return {CesiumCoreView: CesiumCoreView2};});var CesiumCoreView = derived(() => get($$value).CesiumCoreView);var fragment_1 = comment();var node_1 = first_child(fragment_1);component(node_1,() => get(CesiumCoreView),($$anchor3,$$component) => {$$component($$anchor3,{showHomeButton: false,ION_TOKEN: atob("ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnFkR2tpT2lKalkyVTVNRGRpTXkwelptTm1MVFJqWWpJdFlXVTBOQzB6WmpabE1EQTJZamxqTkRFaUxDSnBaQ0k2TWpVMk9USTNMQ0pwWVhRaU9qRTNOakExTVRFeE9EbDkubzdJUHZzd3VFVkhkcDVCWnM0N1ZqUWV6T25yNW42Z2t2aUZsTGIyMF90MA=="),onviewer: (_viewer) => {set(viewer,proxy(_viewer));set(viewerReady,true);},get selectedId() {return get(selectedId);},set selectedId($$value2) {set(selectedId,proxy($$value2));},children: ($$anchor4,$$slotProps) => {var fragment_2 = root_3();var node_2 = first_child(fragment_2);TimeController(node_2,{shouldAnimate: true});var node_3 = sibling(node_2,2);bind_this(Camera(node_3,{onChange: cameraOnChange}),($$value2) => set(camera,proxy($$value2)),() => get(camera));var node_4 = sibling(node_3,2);TerrainTileset(node_4,{});var node_5 = sibling(node_4,2);BaseImageryTileset(node_5,{get imageryStyle() {return imagerytype();}});var node_6 = sibling(node_5,2);each(node_6,17,() => get(parsedModels),(model) => model.id,($$anchor5,model) => {Model($$anchor5,{get id() {return get(model).id;},get glbPath() {return get(model).glbPath;},get coordinate() {return get(model).coordinate;},get orientation() {return get(model).orientation;},get scale() {return get(model).scale;}});});append($$anchor4,fragment_2);},$$slots: {default: true}});});append($$anchor2,fragment_1);} );append($$anchor,fragment);return pop({setCameraStatus,flyToId,getMarkers,get markerscsv() {return markerscsv();},set markerscsv($$value) {markerscsv($$value);flush_sync();},get imagerytype() {return imagerytype();},set imagerytype($$value = ImageryStyle.AERIAL) {imagerytype($$value);flush_sync();}});} customElements.define(atob("ZGdvcy12aWV3ZXI="),create_custom_element( FkBase,{markerscsv: {reflect: true,type: "String"},imagerytype: {reflect: true,type: "String"}},[],["setCameraStatus","flyToId","getMarkers"],false ));export {FkBase as default};