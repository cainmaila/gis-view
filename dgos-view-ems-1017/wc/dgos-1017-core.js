var __defProp = Object.defineProperty;var __typeError = (msg) => {throw TypeError(msg);};var __defNormalProp = (obj,key,value) => key in obj ? __defProp(obj,key,{enumerable: true,configurable: true,writable: true,value}) : obj[key] = value;var __publicField = (obj,key,value) => __defNormalProp(obj,typeof key !== "symbol" ? key + "" : key,value);var __accessCheck = (obj,member,msg) => member.has(obj) || __typeError(atob("Q2Fubm90IA==") + msg);var __privateGet = (obj,member,getter) => (__accessCheck(obj,member,atob("cmVhZCBmcm9tIHByaXZhdGUgZmllbGQ=")),getter ? getter.call(obj) : member.get(obj));var __privateAdd = (obj,member,value) => member.has(obj) ? __typeError(atob("Q2Fubm90IGFkZCB0aGUgc2FtZSBwcml2YXRlIG1lbWJlciBtb3JlIHRoYW4gb25jZQ==")) : member instanceof WeakSet ? member.add(obj) : member.set(obj,value);var __privateSet = (obj,member,value,setter) => (__accessCheck(obj,member,atob("d3JpdGUgdG8gcHJpdmF0ZSBmaWVsZA==")),setter ? setter.call(obj,value) : member.set(obj,value),value);var _subscribe,_viewer;import {g as getContext,p as proxy,s as setContext,u as user_effect,a as set,b as state,c as get,d as create_custom_element,e as push,f as prop,o as onDestroy,h as createGooglePhotorealistic3DTileset,i as pop,j as flush_sync,E as EllipsoidTerrainProvider,k as createWorldTerrainAsync,l as createOsmBuildingsAsync,C as Color,m as createWorldImageryAsync,I as IonWorldImageryStyle,W as WebMapTileServiceImageryProvider,n as ImageryLayer,O as OpenStreetMapImageryProvider,q as CesiumMath,r as Cartesian3,S as ScreenSpaceEventHandler,t as ScreenSpaceEventType,v as untrack,H as HeadingPitchRoll,T as Transforms,w as HeightReference,x as ConstantProperty,y as ConstantPositionProperty,z as comment,A as first_child,B as if_block,D as append,F as derived,G as CzmlDataSource,J as template,K as child,L as reset,M as template_effect,N as set_text,P as map,Q as max,R as min,U as SingleTileImageryProvider,V as Rectangle,X as get$1,Y as append_styles,Z as onMount,_ as tick,$ as Cesium3DTileset,a0 as Matrix4,a1 as CustomShader,a2 as UniformType,a3 as CustomShaderTranslucencyMode,a4 as LightingModel,a5 as HeadingPitchRange,a6 as Spherical,a7 as Entity,a8 as BillboardGraphics,a9 as DistanceDisplayCondition,aa as HorizontalOrigin,ab as VerticalOrigin,ac as snippet,ad as bind_this,ae as noop,af as set_attribute,ag as SceneMode,ah as PolylineGeometry,ai as Primitive,aj as PolylineMaterialAppearance,ak as Material,al as GeometryInstance,am as Viewer,an as CloudCollection,ao as Cartesian2,ap as PolygonHierarchy,aq as ColorGeometryInstanceAttribute,ar as PolygonGeometry,as as PerInstanceColorAppearance,at as GroundPrimitive,au as GroundPolylinePrimitive,av as GroundPolylineGeometry,aw as dayjs,ax as JulianDate,ay as VertexFormat,az as ArcType,aA as EllipseGeometry,aB as MaterialAppearance,aC as createSubscriber,aD as on,aE as IonGeocodeProviderType,aF as PostProcessStageLibrary,aG as Ion} from "./dgos-1017-vendor.js";function createCoreState() {const coreState = proxy({viewer: void 0,scene2d: false,GoogleTileset: void 0,TerrainTileset: void 0,OsmBuildingsTileset: void 0,imageryLayers: {},tilesets: new Map(),layoutSize: {width: 0,height: 0}});setContext("coreState",coreState);return coreState;} function getCoreState() {return getContext("coreState");} function registerTileset(coreState,id,tileset) {coreState.tilesets.set(id,tileset);} function unregisterTileset(coreState,id) {coreState.tilesets.delete(id);} function getTilesetById(coreState,id) {return coreState.tilesets.get(id);} function useTilesetProgressState(onprocessing) {let tileset = state(void 0);function setTileset(tilesetInstance) {set(tileset,proxy(tilesetInstance));} user_effect(() => {var _a;(_a = get(tileset)) == null ? void 0 : _a.loadProgress.addEventListener(_onprocessing);return () => {var _a2;(_a2 = get(tileset)) == null ? void 0 : _a2.loadProgress.removeEventListener(_onprocessing);};});function _onprocessing(numberOfPendingRequests,numberOfTilesProcessing) {onprocessing({numberOfPendingRequests,numberOfTilesProcessing});} return {setTileset};} function GoogleTileset($$anchor,$$props) {push($$props,true);const onprocessing = prop($$props,"onprocessing",7,() => {});const coreState = getCoreState();const {setTileset} = useTilesetProgressState(onprocessing());user_effect(() => {coreState.viewer && initGoogleMap();});user_effect(() => {coreState.GoogleTileset && setTileset(coreState.GoogleTileset);});onDestroy(() => {if (coreState.GoogleTileset && coreState.viewer && !coreState.viewer.isDestroyed()) {coreState.viewer.scene.primitives.remove(coreState.GoogleTileset);}});async function initGoogleMap() {if (!coreState.viewer) return;if (coreState.GoogleTileset) {coreState.GoogleTileset.show = true;} else {try {const tileset = await createGooglePhotorealistic3DTileset({onlyUsingWithGoogleGeocoder: true});setTileset(tileset);coreState.viewer.scene.primitives.add(tileset);coreState.GoogleTileset = tileset;} catch (error) {console.error(atob("54Sh5rOV6LyJ5YWlIEdvb2dsZSDlnLDlnJbmlbjmk5o="),error);}}} return pop({get onprocessing() {return onprocessing();},set onprocessing($$value = () => {}) {onprocessing($$value);flush_sync();}});} create_custom_element(GoogleTileset,{onprocessing: {}},[],[],true);function TerrainTileset($$anchor,$$props) {push($$props,true);const osm = prop($$props,"osm",7,false);const coreState = getCoreState();const ellipsoidTerrainProvider = new EllipsoidTerrainProvider();user_effect(() => {coreState.viewer && initTerrainTileset();});user_effect(() => {if (coreState.viewer && coreState.TerrainTileset) {const osmSetting = parseOsmSetting(osm());toggleOsmBuildings(osmSetting);}});function parseOsmSetting(osmValue) {if (typeof osmValue === "object") {return {color: atob("I2ZmZmZmZg=="),opacity: 0.5,...osmValue};} else if (osmValue === true) {return {color: atob("I2ZmZmZmZg=="),opacity: 0.5};} else {return false;}} onDestroy(() => {if (coreState.viewer) {coreState.viewer.terrainProvider = ellipsoidTerrainProvider;if (coreState.OsmBuildingsTileset) {coreState.OsmBuildingsTileset.show = false;}}});async function initTerrainTileset() {if (!coreState.viewer) return;if (coreState.TerrainTileset) {coreState.viewer.terrainProvider = coreState.TerrainTileset;if (coreState.OsmBuildingsTileset) {coreState.OsmBuildingsTileset.show = true;}} else {try {const terrain = await createWorldTerrainAsync({requestVertexNormals: true,requestWaterMask: true});coreState.TerrainTileset = terrain;coreState.viewer.terrainProvider = coreState.TerrainTileset;} catch (error) {console.error(atob("54Sh5rOV6LyJ5YWl5Zyw5b2i5pW45pOa"),error);}}} async function toggleOsmBuildings(setting) {if (!coreState.viewer) return;if (setting) {if (!coreState.OsmBuildingsTileset) {try {coreState.OsmBuildingsTileset = await createOsmBuildingsAsync({showOutline: false,enableShowOutline: false,defaultColor: Color.fromCssColorString(setting.color || atob("I2ZmZmZmZg==")).withAlpha(setting.opacity || 0.5)});coreState.viewer.scene.primitives.add(coreState.OsmBuildingsTileset);} catch (error) {console.error(atob("54Sh5rOV6LyJ5YWlIE9TTSDlu7rnr4nnianmlbjmk5o="),error);}} else {coreState.OsmBuildingsTileset.show = true;}} else {if (coreState.OsmBuildingsTileset) {coreState.OsmBuildingsTileset.show = false;}}} return pop({get osm() {return osm();},set osm($$value = false) {osm($$value);flush_sync();}});} create_custom_element(TerrainTileset,{osm: {}},[],[],true);const ImageryStyle = {AERIAL: "aerial",AERIAL_WITH_LABELS: "aerialWithLabels",ROAD: "road"};function BaseImageryTileset($$anchor,$$props) {push($$props,true);function mapToIonStyle(style) {switch (style) {case ImageryStyle.AERIAL_WITH_LABELS: return IonWorldImageryStyle.AERIAL_WITH_LABELS;case ImageryStyle.ROAD: return IonWorldImageryStyle.ROAD;case ImageryStyle.AERIAL: default: return IonWorldImageryStyle.AERIAL;}} const imageryStyle = prop($$props,"imageryStyle",23,() => ImageryStyle.AERIAL);const coreState = getCoreState();let satelliteLayer = null;user_effect(() => {if (coreState.viewer) {initSatelliteImagery();}});onDestroy(() => {hideSatelliteLayer();});async function initSatelliteImagery() {if (!coreState.viewer) return;hideSatelliteLayer();try {const imageryProvider = await createWorldImageryAsync({style: mapToIonStyle(imageryStyle())});satelliteLayer = coreState.viewer.imageryLayers.addImageryProvider(imageryProvider,0);if (!coreState.imageryLayers) {coreState.imageryLayers = {};} coreState.imageryLayers.satellite = satelliteLayer;} catch (error) {console.error(atob("54Sh5rOV6LyJ5YWl6KGb5pif5b2x5YOP5pW45pOa"),error);}} function hideSatelliteLayer() {if (coreState.viewer && satelliteLayer) {coreState.viewer.imageryLayers.remove(satelliteLayer,false);satelliteLayer = null;}} user_effect(() => {if (coreState.viewer && satelliteLayer) {initSatelliteImagery();}});return pop({get imageryStyle() {return imageryStyle();},set imageryStyle($$value = ImageryStyle.AERIAL) {imageryStyle($$value);flush_sync();}});} create_custom_element(BaseImageryTileset,{imageryStyle: {}},[],[],true);const NLSC_WMTS = {EMAP5: "EMAP5"};function NLSCImageryLayer($$anchor,$$props) {push($$props,true);let layer = prop($$props,"layer",23,() => NLSC_WMTS.EMAP5),url = prop($$props,"url",7,atob("L25sc2MvU19NYXBzL3dtdHM="));const coreState = getCoreState();user_effect(() => {return coreState.viewer ? init(layer(),url()) : void 0;});function init(layer2,url2) {const {viewer} = coreState;const wmsProvider = new WebMapTileServiceImageryProvider({url: url2,layer: layer2,style: "default",tileMatrixSetID: "GoogleMapsCompatible",format: atob("aW1hZ2UvcG5n")});const wmsLayer = new ImageryLayer(wmsProvider);viewer.imageryLayers.add(wmsLayer);return () => {viewer.imageryLayers.remove(wmsLayer);wmsLayer.isDestroyed() || wmsLayer.destroy();};} return pop({get layer() {return layer();},set layer($$value = NLSC_WMTS.EMAP5) {layer($$value);flush_sync();},get url() {return url();},set url($$value = atob("L25sc2MvU19NYXBzL3dtdHM=")) {url($$value);flush_sync();}});} create_custom_element(NLSCImageryLayer,{layer: {},url: {}},[],[],true);function Openstreetmap($$anchor,$$props) {push($$props,true);let url = prop($$props,"url",7,atob("aHR0cHM6Ly90aWxlLm9wZW5zdHJlZXRtYXAub3JnLw=="));const coreState = getCoreState();user_effect(() => {return coreState.viewer ? init() : void 0;});function init() {const {viewer} = coreState;const osm = new OpenStreetMapImageryProvider({url: url()});const osmLayer = viewer.imageryLayers.addImageryProvider(osm);return () => {viewer.imageryLayers.remove(osmLayer);osmLayer.isDestroyed() || osmLayer.destroy();};} return pop({get url() {return url();},set url($$value = atob("aHR0cHM6Ly90aWxlLm9wZW5zdHJlZXRtYXAub3JnLw==")) {url($$value);flush_sync();}});} create_custom_element(Openstreetmap,{url: {}},[],[],true);function generateUniqueId(prefix) {const timestamp = Date.now();const random = Math.random().toString(36).substring(2,8);const uniqueId = atob("JHt0aW1lc3RhbXB9LSR7cmFuZG9tfQ==");return prefix ? atob("JHtwcmVmaXh9LSR7dW5pcXVlSWR9") : uniqueId;} function coordinateToCartesian3(coordinate) {return Cartesian3.fromDegrees(coordinate.longitude,coordinate.latitude,coordinate == null ? void 0 : coordinate.height);} function orientationToHeadingPitchRoll(orientation) {return {heading: CesiumMath.toRadians(orientation.heading),pitch: orientation.pitch ? CesiumMath.toRadians(-orientation.pitch) : void 0,roll: 0};} function headingPitchRollToOrientation(heading,pitch) {return {heading: CesiumMath.toDegrees(heading),pitch: pitch ? -CesiumMath.toDegrees(pitch) : void 0};} function generateCirclePositions(cesiumModule,centerCoordinate,radiusMeters,numPoints = 64) {const {Cartesian3: Cartesian32,Math: CesiumMath2} = cesiumModule;const positions = [];const circleHeight = centerCoordinate.height || 0;const latCosine = Math.cos(CesiumMath2.toRadians(centerCoordinate.latitude));for (let i = 0;i <= numPoints;i++) {const angle = i / numPoints * 2 * Math.PI;const deltaLat = radiusMeters * Math.cos(angle) / 111320;const deltaLon = radiusMeters * Math.sin(angle) / (111320 * latCosine);const pointLon = centerCoordinate.longitude + deltaLon;const pointLat = centerCoordinate.latitude + deltaLat;positions.push(Cartesian32.fromDegrees(pointLon,pointLat,circleHeight));} return positions;} function parseCsvLine(line) {const result = [];let current = "";let inQuotes = false;let i = 0;while (i < line.length) {const char = line[i];if (char === '"') {if (inQuotes && line[i + 1] === '"') {current += '"';i += 2;} else {inQuotes = !inQuotes;i++;}} else if (char === "," && !inQuotes) {result.push(current.trim());current = "";i++;} else {current += char;i++;}} result.push(current.trim());return result.map((value) => {if (value.startsWith('"') && value.endsWith('"')) {return value.slice(1,-1);} return value;});} function parseCsvToObjects(csvString) {if (!csvString || csvString.trim() === "") {return [];} const lines = csvString.trim().split("\n").map((line) => line.trim());if (lines.length < 2) {return [];} const keys = parseCsvLine(lines[0]);const result = [];for (let i = 1;i < lines.length;i++) {const values = parseCsvLine(lines[i]);const obj = {};keys.forEach((key,index2) => {obj[key] = values[index2] || "";});result.push(obj);} return result;} function parseCsvToMappingPoints(csvString) {const rawData = parseCsvToObjects(csvString);if (rawData.length === 0) {return [];} return rawData.map((row) => {const {id,longitude,latitude,height,near,far,precision,checkOcclusion,occlusionTolerance,...rest} = row;const coordinate = {longitude: parseFloat(longitude) || 0,latitude: parseFloat(latitude) || 0,height: height ? parseFloat(height) : void 0};const overrides = {};if (near && near.trim() !== "") {const nearValue = parseFloat(near);if (!isNaN(nearValue)) overrides.near = nearValue;} if (far && far.trim() !== "") {const farValue = parseFloat(far);if (!isNaN(farValue)) overrides.far = farValue;} if (precision && precision.trim() !== "") {const precisionValue = parseInt(precision,10);if (!isNaN(precisionValue)) overrides.precision = precisionValue;} if (checkOcclusion && checkOcclusion.trim() !== "") {overrides.checkOcclusion = true;} if (occlusionTolerance && occlusionTolerance.trim() !== "") {const occlusionToleranceValue = parseFloat(occlusionTolerance);if (!isNaN(occlusionToleranceValue)) overrides.occlusionTolerance = occlusionToleranceValue;} const meta = Object.keys(rest).length > 0 ? rest : void 0;const mappingPoint = {id: id || "",coordinate};if (Object.keys(overrides).length > 0) {mappingPoint.overrides = overrides;} if (meta) {mappingPoint.meta = meta;} return mappingPoint;});} function parseCsvToModels(csvString) {const rawData = parseCsvToObjects(csvString);if (rawData.length === 0) {return [];} return rawData.map((row) => {const {id,name,glbPath,longitude,latitude,height,scale,heading,pitch} = row;const coordinate = {longitude: parseFloat(longitude) || 0,latitude: parseFloat(latitude) || 0,height: height ? parseFloat(height) : 0};let orientation;if (heading || pitch) {orientation = {heading: heading ? parseFloat(heading) : 0,pitch: pitch ? parseFloat(pitch) : 0};} const modelData = {id: id || generateUniqueId("model"),glbPath: glbPath || "",coordinate};if (name) {modelData.name = name;} if (orientation) {modelData.orientation = orientation;} if (scale) {const scaleValue = parseFloat(scale);if (!isNaN(scaleValue)) {modelData.scale = scaleValue;}} return modelData;});} class EventSubscriber {constructor(viewer,options = {}) {__publicField(this,"_viewer");__publicField(this,"_handler");__publicField(this,"_eventCollection",Object.create(null));__publicField(this,"_eventTypeList",[ "LEFT_DOWN","LEFT_UP","LEFT_CLICK","LEFT_DOUBLE_CLICK","RIGHT_DOWN","RIGHT_UP","RIGHT_CLICK","MIDDLE_DOWN","MIDDLE_UP","MIDDLE_CLICK","MOUSE_MOVE","WHEEL","PINCH_START","PINCH_MOVE","PINCH_END" ]);__publicField(this,"_moveDebounce");__publicField(this,"_lastTime",0);__publicField(this,"_enablePickResult");__publicField(this,"_lastPickResult",null);__publicField(this,"_enabled",true);__publicField(this,"_isDestroyed",false);var _a,_b;this._viewer = viewer;const canvas = options.element || viewer.canvas;if (!canvas) {throw new Error( atob("Q2FudmFzIGVsZW1lbnQgaXMgbm90IGF2YWlsYWJsZS4gUGxlYXNlIGVuc3VyZSB0aGUgdmlld2VyIGlzIGZ1bGx5IGluaXRpYWxpemVkLg==") );} this._handler = new ScreenSpaceEventHandler(canvas);this._moveDebounce = (_a = options.pickResult) == null ? void 0 : _a.moveDebounce;this._enablePickResult = ((_b = options.pickResult) == null ? void 0 : _b.enable) ?? true;this._lastTime = Date.now();this._initEventCollections();} get isDestroyed() {return this._isDestroyed;} get enabled() {return this._enabled;} set enabled(value) {this._enabled = value;} _initEventCollections() {this._eventTypeList.forEach((eventType) => {this._eventCollection[eventType] = {entityEvents: new Map(),globalEvents: new Map()};});} _shouldUpdate(updateTime = true) {if (!this._moveDebounce) return true;const now = Date.now();if (now - this._lastTime < this._moveDebounce) {return false;} else {if (updateTime) this._lastTime = now;return true;}} _convertToCesiumEventType(eventType) {return ScreenSpaceEventType[eventType];} _registerEventHandler(eventType) {if (this._isDestroyed) return;const eventCollection = this._eventCollection[eventType];this._handler.setInputAction((movement) => {if (this._isDestroyed || !this._enabled || eventType === "MOUSE_MOVE" && !this._shouldUpdate()) {return;} if (this._enablePickResult) {if (eventType === "MOUSE_MOVE" && movement.endPosition) {this._lastPickResult = this._viewer.scene.pick(movement.endPosition);} else if (movement.position) {this._lastPickResult = this._viewer.scene.pick(movement.position);}} if (eventCollection.globalEvents.size > 0) {for (const callback of eventCollection.globalEvents.values()) {callback(movement,this._lastPickResult);}} if (movement.position || movement.endPosition) {const pickResult = this._lastPickResult;const entity = pickResult == null ? void 0 : pickResult.id;if (entity && eventCollection.entityEvents.has(entity.id)) {const callback = eventCollection.entityEvents.get(entity.id);if (callback) {callback(movement,entity);}}}},this._convertToCesiumEventType(eventType));} addEntityEvent(entities,callback,eventType) {if (this._isDestroyed) {throw new Error(atob("RXZlbnRTdWJzY3JpYmVyIGhhcyBiZWVuIGRlc3Ryb3llZA=="));} const eventCollection = this._eventCollection[eventType];if (eventCollection.entityEvents.size === 0 && eventCollection.globalEvents.size === 0) {this._registerEventHandler(eventType);} const entityArray = Array.isArray(entities) ? entities : [entities];const subscriptionId = generateUniqueId();for (const entity of entityArray) {eventCollection.entityEvents.set(entity.id,callback);} return {id: subscriptionId,eventType,unsubscribe: () => {for (const entity of entityArray) {eventCollection.entityEvents.delete(entity.id);}}};} addGlobalEvent(callback,eventType) {if (this._isDestroyed) {throw new Error(atob("RXZlbnRTdWJzY3JpYmVyIGhhcyBiZWVuIGRlc3Ryb3llZA=="));} const eventCollection = this._eventCollection[eventType];if (eventCollection.entityEvents.size === 0 && eventCollection.globalEvents.size === 0) {this._registerEventHandler(eventType);} const subscriptionId = generateUniqueId();eventCollection.globalEvents.set(subscriptionId,callback);return {id: subscriptionId,eventType,unsubscribe: () => {eventCollection.globalEvents.delete(subscriptionId);}};} removeEntityEvent(entities,eventType) {if (this._isDestroyed) return;const entityArray = Array.isArray(entities) ? entities : [entities];const eventCollection = this._eventCollection[eventType];for (const entity of entityArray) {eventCollection.entityEvents.delete(entity.id);}} removeGlobalEvent(subscriptionIds,eventType) {if (this._isDestroyed) return;const idsArray = Array.isArray(subscriptionIds) ? subscriptionIds : [subscriptionIds];for (const id of idsArray) {const targetEventType = eventType || this._findGlobalEventType(id);if (targetEventType && this._eventCollection[targetEventType]) {this._eventCollection[targetEventType].globalEvents.delete(id);}}} _findGlobalEventType(subscriptionId) {if (this._isDestroyed) return void 0;for (const eventType of this._eventTypeList) {const eventCollection = this._eventCollection[eventType];if (eventCollection.globalEvents.has(subscriptionId)) {return eventType;}} return void 0;} removeNativeEvent(viewer,eventType) {viewer.screenSpaceEventHandler.removeInputAction(this._convertToCesiumEventType(eventType));} destroy() {this._isDestroyed = true;if (!this._handler.isDestroyed()) {this._handler.destroy();}}} const EVENT_SUBSCRIBER_KEY = Symbol(atob("Y2VzaXVtLWNvcmUtZXZlbnQtc3Vic2NyaWJlcg=="));function createEventSubscriberContext() {let subscriber;let resolvePromise;let isResolved = false;const promise = new Promise((resolve) => {resolvePromise = (sub) => {subscriber = sub;isResolved = true;resolve(sub);};});const context = {get subscriber() {return subscriber;},isReady: () => isResolved && !!subscriber,waitForReady: () => promise};return {context,resolve: resolvePromise};} function isEventSubscriber(obj) {return obj != null && typeof obj === "object" && "addEntityEvent" in obj && typeof obj.addEntityEvent === "function";} function setEventSubscriber(subscriberOrContext) {setContext(EVENT_SUBSCRIBER_KEY,subscriberOrContext);} function getEventSubscriber() {const context = getContext(EVENT_SUBSCRIBER_KEY);if (!context) {throw new Error( atob("RXZlbnRTdWJzY3JpYmVyIG5vdCBmb3VuZCBpbiBjb250ZXh0LiBNYWtlIHN1cmUgeW91IGFyZSB1c2luZyB0aGlzIHdpdGhpbiBhIENlc2l1bUNvcmVWaWV3IGNvbXBvbmVudC4=") );} if (isEventSubscriber(context)) {return context;} const wrapper = context;if (wrapper.isReady() && wrapper.subscriber) {return wrapper.subscriber;} throw new Error( atob("RXZlbnRTdWJzY3JpYmVyIGlzIG5vdCByZWFkeSB5ZXQuIENvbnNpZGVyIHVzaW5nIHdhaXRGb3JFdmVudFN1YnNjcmliZXIoKSBmb3IgYXN5bmMgaW5pdGlhbGl6YXRpb24u") );} async function waitForEventSubscriber() {const context = getContext(EVENT_SUBSCRIBER_KEY);if (!context) {throw new Error( atob("RXZlbnRTdWJzY3JpYmVyIG5vdCBmb3VuZCBpbiBjb250ZXh0LiBNYWtlIHN1cmUgeW91IGFyZSB1c2luZyB0aGlzIHdpdGhpbiBhIENlc2l1bUNvcmVWaWV3IGNvbXBvbmVudC4=") );} if (isEventSubscriber(context)) {return context;} const wrapper = context;return await wrapper.waitForReady();} function useEntityEvent() {const subscriptions = new Set();async function getSubscriber() {try {return getEventSubscriber();} catch {return await waitForEventSubscriber();}} async function addListener(entities,callback,eventType) {const subscriber = await getSubscriber();const subscription = subscriber.addEntityEvent(entities,callback,eventType);subscriptions.add(subscription);return subscription;} async function removeListener(entities,eventType) {const subscriber = await getSubscriber();subscriber.removeEntityEvent(entities,eventType);} function cleanup() {for (const subscription of subscriptions) {subscription.unsubscribe();} subscriptions.clear();} onDestroy(cleanup);return {addListener,removeListener,cleanup};} function useGlobalEvent() {const subscriptions = new Set();async function getSubscriber() {try {return getEventSubscriber();} catch {return await waitForEventSubscriber();}} async function addGlobalListener(callback,eventType) {const subscriber = await getSubscriber();const subscription = subscriber.addGlobalEvent(callback,eventType);subscriptions.add(subscription);return subscription;} async function removeGlobalListener(subscriptionId,eventType) {const subscriber = await getSubscriber();subscriber.removeGlobalEvent(subscriptionId,eventType);} function cleanup() {for (const subscription of subscriptions) {subscription.unsubscribe();} subscriptions.clear();} onDestroy(cleanup);return {addGlobalListener,removeGlobalListener,cleanup};} function Model($$anchor,$$props) {push($$props,true);let id = prop($$props,"id",7),glbPath = prop($$props,"glbPath",7),coordinate = prop($$props,"coordinate",7),scale = prop($$props,"scale",7,1),orientation = prop($$props,"orientation",7),minimumPixelSize = prop($$props,"minimumPixelSize",7),runAnimations = prop($$props,"runAnimations",7),entity = prop($$props,"entity",15),show = prop($$props,"show",15,true),onSelect = prop( $$props,"onSelect",7 ),highlight = prop($$props,"highlight",15,false),highlightColor = prop( $$props,"highlightColor",7,atob("IzAwZmZmZg==") ),highlightSize = prop($$props,"highlightSize",7,2);const coreState = getCoreState();const {addListener} = useEntityEvent();user_effect(() => {if (!coreState.viewer || !glbPath() || !coordinate()) {return;} untrack(() => {const position = Cartesian3.fromDegrees(coordinate().longitude,coordinate().latitude,coordinate().height || 0);let entityOrientation;if (orientation()) {const heading = orientation().heading ?? 0;const pitch = orientation().pitch ?? 0;const hpr = new HeadingPitchRoll( CesiumMath.toRadians(heading),CesiumMath.toRadians(pitch),0 );entityOrientation = Transforms.headingPitchRollQuaternion(position,hpr);} try {entity(coreState.viewer.entities.add({id: id(),name: id(),position,orientation: entityOrientation,model: {uri: glbPath(),scale: scale(),minimumPixelSize: minimumPixelSize(),heightReference: coordinate().height ? void 0 : HeightReference.CLAMP_TO_GROUND,show: true,runAnimations: runAnimations()}}));} catch (error) {console.error(atob("RXJyb3IgYWRkaW5nIG1vZGVsIGVudGl0eTogJHtlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICJVbmtub3duIGVycm9yIn0="));}});});user_effect(() => {if (entity() && entity().model) {entity(entity().model.runAnimations = new ConstantProperty(runAnimations() ?? true),true);}});user_effect(() => {if (entity()) {const position = Cartesian3.fromDegrees(coordinate().longitude,coordinate().latitude,coordinate().height || 0);entity(entity().position = new ConstantPositionProperty(position),true);}});user_effect(() => {var _a;if (entity() && orientation()) {const heading = orientation().heading ?? 0;const pitch = orientation().pitch ?? 0;const hpr = new HeadingPitchRoll(CesiumMath.toRadians(heading),CesiumMath.toRadians(pitch),0);entity(entity().orientation = new ConstantProperty(Transforms.headingPitchRollQuaternion(((_a = entity().position) == null ? void 0 : _a.getValue(coreState.viewer.clock.currentTime)) ?? Cartesian3.ZERO,hpr)),true);}});user_effect(() => {if (entity() && entity().model) {entity(entity().model.show = new ConstantProperty(show()),true);}});user_effect(() => {if (entity() && entity().model) {entity(entity().model.scale = new ConstantProperty(scale()),true);}});user_effect(() => {if (entity() && entity().model) {entity(entity().model.silhouetteColor = new ConstantProperty(highlight() ? Color.fromCssColorString(highlightColor()) : Color.TRANSPARENT),true);entity(entity().model.silhouetteSize = new ConstantProperty(highlight() ? highlightSize() : 0),true);}});user_effect(() => {if (entity() && onSelect()) {let cleanup;addListener( entity(),(movement,clickedEntity) => {if (clickedEntity.id === id()) {onSelect()(id());}},"LEFT_CLICK" ).then((subscription) => {cleanup = () => subscription.unsubscribe();}).catch(console.error);return () => cleanup == null ? void 0 : cleanup();}});onDestroy(() => {if (coreState.viewer && entity()) {coreState.viewer.entities.remove(entity());}});return pop({get id() {return id();},set id($$value) {id($$value);flush_sync();},get glbPath() {return glbPath();},set glbPath($$value) {glbPath($$value);flush_sync();},get coordinate() {return coordinate();},set coordinate($$value) {coordinate($$value);flush_sync();},get scale() {return scale();},set scale($$value = 1) {scale($$value);flush_sync();},get orientation() {return orientation();},set orientation($$value) {orientation($$value);flush_sync();},get minimumPixelSize() {return minimumPixelSize();},set minimumPixelSize($$value) {minimumPixelSize($$value);flush_sync();},get runAnimations() {return runAnimations();},set runAnimations($$value) {runAnimations($$value);flush_sync();},get entity() {return entity();},set entity($$value) {entity($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();},get onSelect() {return onSelect();},set onSelect($$value) {onSelect($$value);flush_sync();},get highlight() {return highlight();},set highlight($$value = false) {highlight($$value);flush_sync();},get highlightColor() {return highlightColor();},set highlightColor($$value = atob("IzAwZmZmZg==")) {highlightColor($$value);flush_sync();},get highlightSize() {return highlightSize();},set highlightSize($$value = 2) {highlightSize($$value);flush_sync();}});} create_custom_element( Model,{id: {},glbPath: {},coordinate: {},scale: {},orientation: {},minimumPixelSize: {},runAnimations: {},entity: {},show: {},onSelect: {},highlight: {},highlightColor: {},highlightSize: {}},[],[],true );var root_1$1 = template(`<div class="czml-error"> </div>`);function CZML($$anchor,$$props) {push($$props,true);let url = prop($$props,"url",7),data = prop($$props,"data",7),show = prop($$props,"show",15,true),onLoaded = prop( $$props,"onLoaded",7 ),onError = prop($$props,"onError",7),onEntityClick = prop($$props,"onEntityClick",7),dataSource = prop($$props,"dataSource",15);const coreState = getCoreState();const viewer = derived(() => coreState.viewer);const {addGlobalListener} = useGlobalEvent();let isLoaded = state(false);let hasError = state(false);let errorMessage = state("");let loadingPromise = state(null);let currentUrl = state(void 0);let currentData = state(void 0);user_effect(() => {if (!get(viewer)) return;if (url() === get(currentUrl) && data() === get(currentData)) return;if (!dataSource()) {dataSource(new CzmlDataSource("CZML_DataSource"));} set(currentUrl,proxy(url()));set(currentData,proxy(data()));resetLoading();if (url()) {loadCzmlFromUrl(url());} else if (data()) {loadCzmlFromData(data());}});user_effect(() => {if (!get(viewer) || !show()) return;let cleanup;addGlobalListener( (movement,pickResult) => {var _a;const pickedObject = pickResult;const entity = pickedObject == null ? void 0 : pickedObject.id;if (entity && dataSource()) {const entityCollection = entity.entityCollection;if (entityCollection && entityCollection.owner && entityCollection.owner === dataSource()) {(_a = onEntityClick()) == null ? void 0 : _a(entity.id);}}},"LEFT_CLICK" ).then((subscription) => {cleanup = () => subscription.unsubscribe();}).catch(console.error);return () => cleanup == null ? void 0 : cleanup();});user_effect(() => {if (dataSource()) {dataSource(dataSource().show = show(),true);}});function resetLoading() {set(isLoaded,false);set(hasError,false);set(errorMessage,"");set(loadingPromise,null);} async function loadCzmlFromUrl(czmlUrl) {try {if (!czmlUrl) return;set(loadingPromise,proxy(CzmlDataSource.load(czmlUrl)));const czmlDataSource = await get(loadingPromise);if (czmlUrl !== get(currentUrl)) return;dataSource(czmlDataSource);addToViewer(czmlDataSource);set(isLoaded,true);if (onLoaded()) {onLoaded()(czmlDataSource);}} catch (error) {if (czmlUrl !== get(currentUrl)) return;console.error(atob("5Yqg6LyJIENaTUwg5pW45pOa5pmC55m855Sf6Yyv6KqkOg=="),error);set(hasError,true);set(errorMessage,proxy(error instanceof Error ? error.message : "未知錯誤"));if (onError()) {onError()(error);}}} async function loadCzmlFromData(czmlData) {try {if (!czmlData) return;dataSource().entities.removeAll();set(loadingPromise,proxy(dataSource().process(czmlData)));await get(loadingPromise);if (czmlData !== get(currentData)) return;addToViewer(dataSource());set(isLoaded,true);if (onLoaded()) {onLoaded()(dataSource());}} catch (error) {if (czmlData !== get(currentData)) return;console.error(atob("6JmV55CGIENaTUwg5pW45pOa5pmC55m855Sf6Yyv6KqkOg=="),error);set(hasError,true);set(errorMessage,proxy(error instanceof Error ? error.message : "未知錯誤"));if (onError()) {onError()(error);}}} function addToViewer(czmlDataSource) {if (get(viewer) && !get(viewer).dataSources.contains(czmlDataSource)) {get(viewer).dataSources.add(czmlDataSource);}} onDestroy(() => {if (get(viewer) && dataSource() && get(viewer).dataSources.contains(dataSource())) {get(viewer).dataSources.remove(dataSource());}});var fragment = comment();var node = first_child(fragment);{var consequent = ($$anchor2) => {var div = root_1$1();var text = child(div);reset(div);template_effect(() => set_text(text,atob("5Yqg6LyJIENaTUwg5pW45pOa5pmC55m855Sf6Yyv6KqkOiAke2dldChlcnJvck1lc3NhZ2UpID8/ICIifQ==")));append($$anchor2,div);};if_block(node,($$render) => {if (get(hasError)) $$render(consequent);});} append($$anchor,fragment);return pop({get url() {return url();},set url($$value) {url($$value);flush_sync();},get data() {return data();},set data($$value) {data($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();},get onLoaded() {return onLoaded();},set onLoaded($$value) {onLoaded($$value);flush_sync();},get onError() {return onError();},set onError($$value) {onError($$value);flush_sync();},get onEntityClick() {return onEntityClick();},set onEntityClick($$value) {onEntityClick($$value);flush_sync();},get dataSource() {return dataSource();},set dataSource($$value) {dataSource($$value);flush_sync();}});} create_custom_element( CZML,{url: {},data: {},show: {},onLoaded: {},onError: {},onEntityClick: {},dataSource: {}},[],[],true );function heatmapPlugin(h337) {const h337_V2 = h337 || window.h337;const container = document.createElement("div");container.style.display = "none";document.body.append(container);h337_V2.generateMap = function({width,height,data,max: max2 = 100,min: min2 = 0,h337HeatmapSetting = {backgroundColor: atob("I2ZmZjA="),radius: 5,maxOpacity: 0.7,minOpacity: 0,blur: 1}}) {container.style.width = atob("JHt3aWR0aH1weA==");container.style.height = atob("JHtoZWlnaHR9cHg=");const heatmapInstance = this.create({container,...h337HeatmapSetting});const list = {max: max2,min: min2,data};heatmapInstance.setData(list);return heatmapInstance.getDataURL();};h337_V2.generateMapDistroy = function() {var _a;(_a = container.parentElement) == null ? void 0 : _a.removeChild(container);};} function base46ToUrl(base64ImageData) {const contentType = atob("aW1hZ2UvcG5n");const byteCharacters = atob(base64ImageData.substring(atob("ZGF0YToke2NvbnRlbnRUeXBlfTtiYXNlNjQs").length));const byteArrays = [];for (let offset = 0;offset < byteCharacters.length;offset += 1024) {const slice = byteCharacters.slice(offset,offset + 1024);const byteNumbers = new Array(slice.length);for (let i = 0;i < slice.length;i++) {byteNumbers[i] = slice.charCodeAt(i);} const byteArray = new Uint8Array(byteNumbers);byteArrays.push(byteArray);} const blob = new Blob(byteArrays,{type: contentType});return URL.createObjectURL(blob);} const _HeatmapImageryProvider = class _HeatmapImageryProvider {constructor() {this._init();} _init() {const {h337} = window;_HeatmapImageryProvider.h337 = h337;heatmapPlugin(h337);} generateImageryProvider({mapData,imgSize,maxVal,minVal},h337HeatmapSetting) {const safeSettings = {...h337HeatmapSetting};if (typeof safeSettings.radius !== "number" || safeSettings.radius <= 0) {safeSettings.radius = 5;} const xList = map(mapData,(item) => get$1(item,"lon"));const maxXNum = max(xList);const minXNum = min(xList);if (maxXNum === void 0 || minXNum === void 0) {throw new Error(atob("bWF4WE51bSBvciBtaW5YTnVtIGlzIHVuZGVmaW5lZA=="));} const xRang = maxXNum - minXNum;const yList = map(mapData,(item) => get$1(item,"lat"));const maxYNum = max(yList);const minYNum = min(yList);if (maxYNum === void 0 || minYNum === void 0) {throw new Error(atob("bWF4WU51bSBvciBtaW5ZTnVtIGlzIHVuZGVmaW5lZA=="));} const yRang = maxYNum - minYNum;const safeXRang = Math.max(xRang,1e-6);const safeYRang = Math.max(yRang,1e-6);const isXBigger = safeXRang > safeYRang;const bigRang = safeXRang > safeYRang ? safeXRang : safeYRang;const guD = safeSettings.radius || 6;const safeImgSize = Math.max(imgSize,guD * 4 + 100);const sclace = Math.max((safeImgSize - guD * 2) / bigRang,0.1);const xDiff = isXBigger ? 0 : (bigRang - safeXRang) / 2;const yDiff = isXBigger ? (bigRang - safeYRang) / 2 : 0;const base64 = _HeatmapImageryProvider.h337.generateMap({width: safeImgSize,height: safeImgSize,data: map(mapData,(parking) => {return {x: (parking.lon - minXNum + xDiff) * sclace + guD,y: (maxYNum - parking.lat + yDiff) * sclace + guD,value: parking.value};}),max: maxVal,min: minVal,h337HeatmapSetting: safeSettings});const guDD = guD / sclace;return SingleTileImageryProvider.fromUrl(base46ToUrl(base64),{rectangle: Rectangle.fromDegrees( minXNum - xDiff - guDD,minYNum - yDiff - guDD,maxXNum + xDiff + guDD,maxYNum + yDiff + guDD )});} destroy() {_HeatmapImageryProvider.h337.generateMapDistroy();}};__publicField(_HeatmapImageryProvider,"h337");let HeatmapImageryProvider = _HeatmapImageryProvider;var root_1 = template(`<div class="heatmap-error svelte-1057knv"> </div>`);const $$css$2 = {hash: "svelte-1057knv",code: ".heatmap-error.svelte-1057knv {position:absolute;bottom:10px;left:10px;background-color:rgba(255,0,0,0.7);color:white;padding:8px 12px;border-radius:4px;font-size:14px;max-width:80%;z-index:1000;}"};function Heatmap($$anchor,$$props) {push($$props,true);append_styles($$anchor,$$css$2);const coreState = getCoreState();const viewer = derived(() => coreState.viewer);let data = prop($$props,"data",23,() => []),imgSize = prop($$props,"imgSize",7,1024),maxValue = prop($$props,"maxValue",7,void 0),minValue = prop($$props,"minValue",7,void 0),settings = prop($$props,"settings",31,() => proxy({backgroundColor: atob("I2ZmZjA="),radius: 5,maxOpacity: 0.7,minOpacity: 0,blur: 1,gradient: {".3": "blue",".5": "green",".7": "yellow",".9": "red"}})),onReady = prop( $$props,"onReady",7 ),onError = prop($$props,"onError",7),layer = prop($$props,"layer",15,null);let heatmapProvider = state(null);let isInitialized = state(false);let hasError = state(false);let errorMessage = state("");let currentData = state(proxy([]));let currentSettings = state(null);onMount(() => {try {set(heatmapProvider,proxy(new HeatmapImageryProvider()));set(currentData,proxy([...data()]));set(currentSettings,proxy({...settings()}));tick().then(() => {updateHeatmapLayer();});} catch (error) {handleError(error);}});user_effect(() => {if (!get(isInitialized)) return;const dataChanged = JSON.stringify(data()) !== JSON.stringify(get(currentData));const settingsChanged = JSON.stringify(settings()) !== JSON.stringify(get(currentSettings));if (dataChanged || settingsChanged) {set(currentData,proxy([...data()]));set(currentSettings,proxy({...settings()}));updateHeatmapLayer();}});async function updateHeatmapLayer() {if (!get(viewer) || !get(heatmapProvider) || data().length === 0) return;try {removeCurrentLayer();const safeSettings = {...settings()};if (typeof safeSettings.radius !== "number" || safeSettings.radius <= 0) {safeSettings.radius = 5;} if (typeof safeSettings.maxOpacity !== "number" || safeSettings.maxOpacity < 0 || safeSettings.maxOpacity > 1) {safeSettings.maxOpacity = 0.7;} if (typeof safeSettings.blur !== "number" || safeSettings.blur < 0) {safeSettings.blur = 1;} const minImgSize = safeSettings.radius * 4 + 100;const safeImgSize = Math.max(imgSize(),minImgSize);const imageryProvider = await get(heatmapProvider).generateImageryProvider( {mapData: data(),imgSize: safeImgSize,maxVal: maxValue(),minVal: minValue()},safeSettings );layer(get(viewer).imageryLayers.addImageryProvider(imageryProvider));set(isInitialized,true);if (onReady() && layer()) {onReady()(layer());}} catch (error) {handleError(error);}} function removeCurrentLayer() {if (layer() && get(viewer)) {get(viewer).imageryLayers.remove(layer(),true);set(isInitialized,false);layer(null);}} function handleError(error) {console.error(atob("54ax5Yqb5ZyW5Ym15bu65aSx5pWX77ya"),error);set(hasError,true);set(errorMessage,proxy(error instanceof Error ? error.message : "未知錯誤"));if (onError()) {onError()(error);}} onDestroy(() => {removeCurrentLayer();if (get(heatmapProvider)) {get(heatmapProvider).destroy();set(heatmapProvider,null);}});function refresh() {updateHeatmapLayer();} function setData(newData) {data(newData);if (get(isInitialized)) {updateHeatmapLayer();}} function setSettings(newSettings) {settings({...settings(),...newSettings});} var fragment = comment();var node = first_child(fragment);{var consequent = ($$anchor2) => {var div = root_1();var text = child(div);reset(div);template_effect(() => set_text(text,atob("54ax5Yqb5ZyW5Ym15bu65aSx5pWXOiAke2dldChlcnJvck1lc3NhZ2UpID8/ICIifQ==")));append($$anchor2,div);};if_block(node,($$render) => {if (get(hasError)) $$render(consequent);});} append($$anchor,fragment);return pop({refresh,setData,setSettings,get data() {return data();},set data($$value = []) {data($$value);flush_sync();},get imgSize() {return imgSize();},set imgSize($$value = 1024) {imgSize($$value);flush_sync();},get maxValue() {return maxValue();},set maxValue($$value = void 0) {maxValue($$value);flush_sync();},get minValue() {return minValue();},set minValue($$value = void 0) {minValue($$value);flush_sync();},get settings() {return settings();},set settings($$value = {backgroundColor: atob("I2ZmZjA="),radius: 5,maxOpacity: 0.7,minOpacity: 0,blur: 1,gradient: {".3": "blue",".5": "green",".7": "yellow",".9": "red"}}) {settings($$value);flush_sync();},get onReady() {return onReady();},set onReady($$value) {onReady($$value);flush_sync();},get onError() {return onError();},set onError($$value) {onError($$value);flush_sync();},get layer() {return layer();},set layer($$value = null) {layer($$value);flush_sync();}});} create_custom_element( Heatmap,{data: {},imgSize: {},maxValue: {},minValue: {},settings: {},onReady: {},onError: {},layer: {}},[],["refresh","setData","setSettings"],true );function Tileset($$anchor,$$props) {push($$props,true);let id = prop($$props,"id",7),fromUrl = prop($$props,"fromUrl",7),show = prop($$props,"show",7,true),maximumScreenSpaceError = prop($$props,"maximumScreenSpaceError",7,16),maximumMemoryUsage = prop($$props,"maximumMemoryUsage",7,512),cullWithChildrenBounds = prop($$props,"cullWithChildrenBounds",7,true),cullRequestsWhileMoving = prop($$props,"cullRequestsWhileMoving",7,true),cullRequestsWhileMovingMultiplier = prop($$props,"cullRequestsWhileMovingMultiplier",7,60),offsetHeight = prop($$props,"offsetHeight",7,0),enableXrayEffect = prop($$props,"enableXrayEffect",7,false),xrayIntensity = prop($$props,"xrayIntensity",7,1),xrayAlpha = prop($$props,"xrayAlpha",7,0.3),xrayBaseColor = prop($$props,"xrayBaseColor",7,atob("IzAwNjZmZg==")),xrayGlowColor = prop($$props,"xrayGlowColor",7,atob("IzMzZmZmZg==")),tileset = prop($$props,"tileset",15),onSelect = prop($$props,"onSelect",7),onLoad = prop($$props,"onLoad",7),onLoadError = prop($$props,"onLoadError",7),onLoadProgress = prop($$props,"onLoadProgress",7);const coreState = getCoreState();useEntityEvent();let originalModelMatrix = void 0;let xrayShader = void 0;const {setTileset: setProgressTileset} = useTilesetProgressState((progress) => {var _a;(_a = onLoadProgress()) == null ? void 0 : _a(progress.numberOfPendingRequests,progress.numberOfTilesProcessing);});user_effect(() => {if (!coreState.viewer || !fromUrl()) {return;} untrack(() => {cleanupTileset();void loadTileset().catch((error) => {console.error(atob("RmFpbGVkIHRvIGxvYWQgdGlsZXNldCBpbiBlZmZlY3Q6"),error);});});});user_effect(() => {if (tileset()) {tileset(tileset().show = show(),true);}});user_effect(() => {if (tileset() && offsetHeight() !== void 0) {updateTilesetHeight();}});user_effect(() => {if (tileset()) {updateXrayEffect();}});async function loadTileset() {var _a,_b;if (!coreState.viewer || !fromUrl()) return;try {const newTileset = await Cesium3DTileset.fromUrl(fromUrl(),{maximumScreenSpaceError: maximumScreenSpaceError(),cullWithChildrenBounds: cullWithChildrenBounds(),cullRequestsWhileMoving: cullRequestsWhileMoving(),cullRequestsWhileMovingMultiplier: cullRequestsWhileMovingMultiplier()});if ("maximumMemoryUsage" in newTileset) {newTileset.maximumMemoryUsage = maximumMemoryUsage();} newTileset.show = show();coreState.viewer.scene.primitives.add(newTileset);originalModelMatrix = Matrix4.clone(newTileset.modelMatrix);applyHeightOffset(newTileset);setProgressTileset(newTileset);tileset(newTileset);registerTileset(coreState,id(),newTileset);(_a = onLoad()) == null ? void 0 : _a(newTileset);} catch (error) {console.error(atob("6LyJ5YWlIFRpbGVzZXQg5pmC55m855Sf6Yyv6KqkOg=="),error);(_b = onLoadError()) == null ? void 0 : _b(error);}} function cleanupTileset() {if (tileset() && coreState.viewer && !coreState.viewer.isDestroyed()) {coreState.viewer.scene.primitives.remove(tileset());if (!tileset().isDestroyed()) {tileset().destroy();}} cleanupXrayResources();unregisterTileset(coreState,id());tileset(void 0);originalModelMatrix = void 0;} user_effect(() => {if (tileset() && onSelect() && coreState.viewer) {let cleanup;const {addGlobalListener} = useGlobalEvent();addGlobalListener( (movement,pickResult) => {const result = pickResult;if (result && result.primitive === tileset()) {onSelect()(id());}},"LEFT_CLICK" ).then((subscription) => {cleanup = () => subscription.unsubscribe();}).catch(console.error);return () => cleanup == null ? void 0 : cleanup();}});function updateTilesetHeight() {if (tileset() && !tileset().isDestroyed()) {applyHeightOffset(tileset());}} function applyHeightOffset(tilesetInstance) {if (offsetHeight() === 0) {if (originalModelMatrix) {tilesetInstance.modelMatrix = Matrix4.clone(originalModelMatrix);} else {tilesetInstance.modelMatrix = Matrix4.IDENTITY;} return;} const offsetVector = new Cartesian3(0,0,offsetHeight());const translationMatrix = Matrix4.fromTranslation(offsetVector);if (originalModelMatrix) {tilesetInstance.modelMatrix = Matrix4.multiply(translationMatrix,originalModelMatrix,new Matrix4());} else {tilesetInstance.modelMatrix = translationMatrix;}} function cssColorToCartesian3(cssColorString) {const color = Color.fromCssColorString(cssColorString);return new Cartesian3(color.red,color.green,color.blue);} function createXrayShader() {return new CustomShader({lightingModel: LightingModel.UNLIT,translucencyMode: CustomShaderTranslucencyMode.TRANSLUCENT,uniforms: {u_time: {value: 0,type: UniformType.FLOAT},u_intensity: {value: xrayIntensity(),type: UniformType.FLOAT},u_alpha: {value: xrayAlpha(),type: UniformType.FLOAT},u_baseColor: {value: cssColorToCartesian3(xrayBaseColor()),type: UniformType.VEC3},u_glowColor: {value: cssColorToCartesian3(xrayGlowColor()),type: UniformType.VEC3}},fragmentShaderText: atob("CgkJCQl2b2lkIGZyYWdtZW50TWFpbihGcmFnbWVudElucHV0IGZzSW5wdXQsIGlub3V0IGN6bV9tb2RlbE1hdGVyaWFsIG1hdGVyaWFsKSB7CgkJCQkJLy8g542y5Y+W6KaW6KeS5ZCR6YeP6IiH5rOV57ea55qE5aS+6KeS77yM5Ym15bu66YKK57ej55m85YWJ5pWI5p6cCgkJCQkJdmVjMyBub3JtYWwgPSBub3JtYWxpemUoZnNJbnB1dC5hdHRyaWJ1dGVzLm5vcm1hbEVDKTsKCQkJCQl2ZWMzIHZpZXdWZWN0b3IgPSBub3JtYWxpemUoLWZzSW5wdXQuYXR0cmlidXRlcy5wb3NpdGlvbkVDKTsKCQkJCQlmbG9hdCBmcmVzbmVsID0gYWJzKGRvdCh2aWV3VmVjdG9yLCBub3JtYWwpKTsKCgkJCQkJLy8g5Y+N6L2J6I+y5raF6ICz5pWI5p6c77yM6K6T6YKK57ej5pu05LquCgkJCQkJZnJlc25lbCA9IDEuMCAtIGZyZXNuZWw7CgoJCQkJCS8vIOWJteW7uuiEiOihneaViOaenAoJCQkJCWZsb2F0IHB1bHNlID0gc2luKHVfdGltZSAqIDMuMCkgKiAwLjMgKyAwLjc7CgoJCQkJCS8vIOS9v+eUqOWPr+mFjee9rueahOWGt+WFiemhj+iJsgoJCQkJCXZlYzMgYmFzZUNvbG9yID0gdV9iYXNlQ29sb3I7CgkJCQkJdmVjMyBnbG93Q29sb3IgPSB1X2dsb3dDb2xvcjsKCgkJCQkJLy8g5re35ZCI5Z+656SO6Imy6IiH55m85YWJ6Imy77yM5Ym16YCg55m85YWJ5pWI5p6cCgkJCQkJdmVjMyBmaW5hbENvbG9yID0gbWl4KGJhc2VDb2xvciwgZ2xvd0NvbG9yLCBmcmVzbmVsICogcHVsc2UpOwoKCQkJCQkvLyDmh4nnlKjlvLfluqboqr/mlbTvvIzorpPpoY/oibLmm7Tkuq7ku6XmqKHmk6znmbzlhYkKCQkJCQlmaW5hbENvbG9yICo9IHVfaW50ZW5zaXR5ICogMi4wOwoKCQkJCQkvLyDoqK3nva7mnZDos6rlsazmgKcKCQkJCQltYXRlcmlhbC5kaWZmdXNlID0gZmluYWxDb2xvcjsKCQkJCQltYXRlcmlhbC5hbHBoYSA9IG1peCgwLjEsIHVfYWxwaGEsIGZyZXNuZWwpICogcHVsc2U7CgoJCQkJCS8vIOiuk+mCiue3o+abtOWKoOmAj+aYju+8jOWinuW8tyBYLXJheSDmlYjmnpwKCQkJCQltYXRlcmlhbC5hbHBoYSAqPSAoMS4wIC0gZnJlc25lbCAqIDAuMyk7CgkJCQl9CgkJCQ==")});} function updateXrayEffect() {if (!tileset() || tileset().isDestroyed()) return;if (enableXrayEffect()) {if (!xrayShader) {xrayShader = createXrayShader();startXrayAnimation();} else {xrayShader.setUniform("u_intensity",xrayIntensity());xrayShader.setUniform("u_alpha",xrayAlpha());xrayShader.setUniform("u_baseColor",cssColorToCartesian3(xrayBaseColor()));xrayShader.setUniform("u_glowColor",cssColorToCartesian3(xrayGlowColor()));} tileset(tileset().customShader = xrayShader,true);} else {tileset(tileset().customShader = void 0,true);cleanupXrayResources();}} let animationId = void 0;let lastUpdateTime = 0;const UPDATE_THROTTLE_MS = 16;function startXrayAnimation() {if (animationId !== void 0) return;const animate = () => {const isTilesetValid = tileset() && !tileset().isDestroyed() && tileset().show;const isShaderValid = xrayShader && enableXrayEffect();if (isTilesetValid && isShaderValid) {const currentTime = performance.now();if (currentTime - lastUpdateTime >= UPDATE_THROTTLE_MS) {const time = currentTime / 1e3;xrayShader.setUniform("u_time",time);lastUpdateTime = currentTime;} animationId = requestAnimationFrame(animate);} else {stopXrayAnimation();}};animate();} function stopXrayAnimation() {if (animationId !== void 0) {cancelAnimationFrame(animationId);animationId = void 0;} lastUpdateTime = 0;} function cleanupXrayResources() {stopXrayAnimation();xrayShader = void 0;} onDestroy(() => {cleanupTileset();});return pop({get id() {return id();},set id($$value) {id($$value);flush_sync();},get fromUrl() {return fromUrl();},set fromUrl($$value) {fromUrl($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();},get maximumScreenSpaceError() {return maximumScreenSpaceError();},set maximumScreenSpaceError($$value = 16) {maximumScreenSpaceError($$value);flush_sync();},get maximumMemoryUsage() {return maximumMemoryUsage();},set maximumMemoryUsage($$value = 512) {maximumMemoryUsage($$value);flush_sync();},get cullWithChildrenBounds() {return cullWithChildrenBounds();},set cullWithChildrenBounds($$value = true) {cullWithChildrenBounds($$value);flush_sync();},get cullRequestsWhileMoving() {return cullRequestsWhileMoving();},set cullRequestsWhileMoving($$value = true) {cullRequestsWhileMoving($$value);flush_sync();},get cullRequestsWhileMovingMultiplier() {return cullRequestsWhileMovingMultiplier();},set cullRequestsWhileMovingMultiplier($$value = 60) {cullRequestsWhileMovingMultiplier($$value);flush_sync();},get offsetHeight() {return offsetHeight();},set offsetHeight($$value = 0) {offsetHeight($$value);flush_sync();},get enableXrayEffect() {return enableXrayEffect();},set enableXrayEffect($$value = false) {enableXrayEffect($$value);flush_sync();},get xrayIntensity() {return xrayIntensity();},set xrayIntensity($$value = 1) {xrayIntensity($$value);flush_sync();},get xrayAlpha() {return xrayAlpha();},set xrayAlpha($$value = 0.3) {xrayAlpha($$value);flush_sync();},get xrayBaseColor() {return xrayBaseColor();},set xrayBaseColor($$value = atob("IzAwNjZmZg==")) {xrayBaseColor($$value);flush_sync();},get xrayGlowColor() {return xrayGlowColor();},set xrayGlowColor($$value = atob("IzMzZmZmZg==")) {xrayGlowColor($$value);flush_sync();},get tileset() {return tileset();},set tileset($$value) {tileset($$value);flush_sync();},get onSelect() {return onSelect();},set onSelect($$value) {onSelect($$value);flush_sync();},get onLoad() {return onLoad();},set onLoad($$value) {onLoad($$value);flush_sync();},get onLoadError() {return onLoadError();},set onLoadError($$value) {onLoadError($$value);flush_sync();},get onLoadProgress() {return onLoadProgress();},set onLoadProgress($$value) {onLoadProgress($$value);flush_sync();}});} create_custom_element( Tileset,{id: {},fromUrl: {},show: {},maximumScreenSpaceError: {},maximumMemoryUsage: {},cullWithChildrenBounds: {},cullRequestsWhileMoving: {},cullRequestsWhileMovingMultiplier: {},offsetHeight: {},enableXrayEffect: {},xrayIntensity: {},xrayAlpha: {},xrayBaseColor: {},xrayGlowColor: {},tileset: {},onSelect: {},onLoad: {},onLoadError: {},onLoadProgress: {}},[],[],true );function Camera($$anchor,$$props) {push($$props,true);const onChange = prop($$props,"onChange",7);const coreState = getCoreState();const viewer = derived(() => coreState.viewer);const scene2d = derived(() => coreState.scene2d);function isCoordinate(target) {return typeof target === "object" && target !== null && "longitude" in target && "latitude" in target;} function getPrimitiveById(id) {if (!get(viewer)) return void 0;const primitives = get(viewer).scene.primitives;for (let i = 0;i < primitives.length;i++) {const primitive = primitives.get(i);if (primitive.id === id) {return primitive;} if (primitive._instanceIds && primitive._instanceIds.includes(id)) {return primitive;} if (primitive.geometryInstances) {const instances = Array.isArray(primitive.geometryInstances) ? primitive.geometryInstances : [primitive.geometryInstances];for (const instance of instances) {if (instance.id === id) {return primitive;}}}} return void 0;} function calculateCameraPosition(targetPosition,heading,pitch,range) {const transform = Transforms.eastNorthUpToFixedFrame(targetPosition);const coneAngle = Math.PI / 2 - pitch;const offset = Cartesian3.fromSpherical(new Spherical(heading,coneAngle,range));const cameraPosition = new Cartesian3();Matrix4.multiplyByPoint(transform,offset,cameraPosition);return cameraPosition;} function setCameraStatus(cameraStatus) {if (!get(viewer)) return;if (!cameraStatus || typeof cameraStatus !== "object") {return;} const {coordinate,orientation} = cameraStatus;let longitude = 0;let latitude = 0;let height = 0;if (coordinate && typeof coordinate === "object") {if (typeof coordinate.longitude === "number" && isFinite(coordinate.longitude)) {longitude = coordinate.longitude;} if (typeof coordinate.latitude === "number" && isFinite(coordinate.latitude)) {latitude = coordinate.latitude;} if (typeof coordinate.height === "number" && isFinite(coordinate.height)) {height = coordinate.height;}} let heading = 0;let pitch = 90;if (orientation && typeof orientation === "object") {if (typeof orientation.heading === "number" && isFinite(orientation.heading)) {heading = orientation.heading;} if (typeof orientation.pitch === "number" && isFinite(orientation.pitch)) {pitch = orientation.pitch;}} heading = (heading % 360 + 360) % 360;pitch = Math.max(0,Math.min(90,pitch));const _pitch = get(scene2d) ? 90 : pitch;const position = Cartesian3.fromDegrees(longitude,latitude,height);const headingRad = CesiumMath.toRadians(heading);const pitchRad = CesiumMath.toRadians(-_pitch);const rollRad = 0;get(viewer).camera.setView({destination: position,orientation: {heading: headingRad,pitch: pitchRad,roll: rollRad}});} function flyToLocation(coordinate,{duration = 3,orientation = {heading: 0,pitch: 45},range = 1e3,complete} = {}) {if (get(viewer)) {let _orientation = orientation;if (get(scene2d)) {_orientation = {heading: (orientation == null ? void 0 : orientation.heading) || 0,pitch: 90};} const {longitude,latitude,height = 0} = coordinate;const targetPosition = Cartesian3.fromDegrees(longitude,latitude,height);const headingRad = CesiumMath.toRadians(_orientation.heading);const pitchRad = CesiumMath.toRadians(_orientation.pitch || 45);const cameraPosition = calculateCameraPosition(targetPosition,headingRad,pitchRad,range);const direction = Cartesian3.subtract(targetPosition,cameraPosition,new Cartesian3());Cartesian3.normalize(direction,direction);const up = Cartesian3.normalize(cameraPosition,new Cartesian3());get(viewer).camera.flyTo({destination: cameraPosition,orientation: {direction,up},duration,complete});}} function flyTo(id,{duration = 3,orientation,range = 1e3,complete} = {}) {flyToTarget(id,{duration,orientation,range,complete});} function flyToTileset(id,{duration = 3,orientation,range = 1e3,complete} = {}) {flyToTarget(id,{duration,orientation,range,complete});} function flyToTarget(target,{duration = 3,orientation,range = 1e3,complete} = {}) {if (!get(viewer)) return;if (isCoordinate(target)) {flyToLocation(target,{duration,orientation,range,complete});return;} const id = target;const entity = get(viewer).entities.getById(id);if (entity) {const _orientation = orientation ? calculateScene2d(orientation) : void 0;get(viewer).flyTo(entity,{duration,offset: _orientation ? new HeadingPitchRange(CesiumMath.toRadians(_orientation.heading),_orientation.pitch ? CesiumMath.toRadians(-_orientation.pitch) : void 0,range) : void 0}).then(() => {if (complete) complete();});return;} const tileset = getTilesetById(coreState,id);if (tileset) {const _orientation = orientation ? calculateScene2d(orientation) : void 0;get(viewer).flyTo(tileset,{duration,offset: _orientation ? new HeadingPitchRange(CesiumMath.toRadians(_orientation.heading),_orientation.pitch ? CesiumMath.toRadians(-_orientation.pitch) : void 0,range) : void 0}).then(() => {if (complete) complete();});return;} const primitive = getPrimitiveById(id);if (primitive) {try {const boundingSphere = primitive.boundingSphere || primitive._boundingSphere;if (boundingSphere) {const _orientation = orientation ? calculateScene2d(orientation) : void 0;get(viewer).camera.flyToBoundingSphere(boundingSphere,{duration,offset: _orientation ? new HeadingPitchRange(CesiumMath.toRadians(_orientation.heading),_orientation.pitch ? CesiumMath.toRadians(-_orientation.pitch) : void 0,range) : void 0,complete});return;}} catch (error) {console.warn(atob("Q2FtZXJhLmZseVRvVGFyZ2V0OiDnhKHms5Xpo5vlkJEgUHJpbWl0aXZlICIke2lkfSI="),error);}} console.warn(atob("Q2FtZXJhLmZseVRvVGFyZ2V0OiDmib7kuI3liLAgSUQg54K6ICIke2lkfSIg55qE55uu5qiZIChFbnRpdHnjgIFUaWxlc2V0IOaIliBQcmltaXRpdmUp"));} let cartographicStr = "";user_effect(() => {if (onChange() && get(viewer)) {const camera = get(viewer).camera;const onPreRender = () => {const cartographic = camera.positionCartographic;let _cartographicStr = JSON.stringify(cartographic);if (_cartographicStr === cartographicStr) return;cartographicStr = _cartographicStr;const coordinate = {longitude: CesiumMath.toDegrees(cartographic.longitude),latitude: CesiumMath.toDegrees(cartographic.latitude),height: cartographic.height};const orientation = headingPitchRollToOrientation(camera.heading,camera.pitch);onChange()({coordinate,orientation});};get(viewer).scene.preRender.addEventListener(onPreRender);return () => {get(viewer).scene.preRender.removeEventListener(onPreRender);};}});function calculateScene2d(orientation) {if (get(scene2d)) {return {heading: (orientation == null ? void 0 : orientation.heading) || 0,pitch: 90};} else {return orientation;}} return pop({flyToTarget,flyToLocation,flyTo,flyToTileset,setCameraStatus,get onChange() {return onChange();},set onChange($$value) {onChange($$value);flush_sync();}});} create_custom_element( Camera,{onChange: {}},[],[ "flyToTarget","flyToLocation","flyTo","flyToTileset","setCameraStatus" ],true );function Billboard($$anchor,$$props) {push($$props,true);function getAnchorOrigins(anchor2) {let horizontal;const col = (anchor2 - 1) % 3 + 1;if (col === 1) horizontal = HorizontalOrigin.LEFT;else if (col === 2) horizontal = HorizontalOrigin.CENTER;else horizontal = HorizontalOrigin.RIGHT;let vertical;const row = Math.ceil(anchor2 / 3);if (row === 1) vertical = VerticalOrigin.TOP;else if (row === 2) vertical = VerticalOrigin.CENTER;else vertical = VerticalOrigin.BOTTOM;return {horizontal,vertical};} let id = prop($$props,"id",7),coordinate = prop($$props,"coordinate",7),image = prop($$props,"image",7),scale = prop($$props,"scale",7,1),color = prop($$props,"color",7,atob("I2ZmZmZmZg==")),anchor = prop($$props,"anchor",7,5),distanceDisplayCondition = prop($$props,"distanceDisplayCondition",7),show = prop($$props,"show",7,true),onSelect = prop($$props,"onSelect",7);let entity = state(void 0);const coreState = getCoreState();const viewer = derived(() => coreState.viewer);const {addListener} = useEntityEvent();function getCartesian3FromCoordinate(coord) {return Cartesian3.fromDegrees(coord.longitude,coord.latitude,coord.height || 0);} user_effect(() => {if (!get(viewer)) return;const origins = getAnchorOrigins(anchor());const newEntity = new Entity({id: id(),position: new ConstantPositionProperty(getCartesian3FromCoordinate(coordinate())),billboard: new BillboardGraphics({image: image(),scale: scale(),color: new ConstantProperty(Color.fromCssColorString(color())),horizontalOrigin: origins.horizontal,verticalOrigin: origins.vertical,distanceDisplayCondition: distanceDisplayCondition() ? new DistanceDisplayCondition(distanceDisplayCondition().near,distanceDisplayCondition().far) : void 0,show: show()})});get(viewer).entities.add(newEntity);set(entity,proxy(newEntity));return () => {if (get(viewer) && get(entity)) {get(viewer).entities.remove(get(entity));set(entity,void 0);}};});user_effect(() => {if (get(entity) && get(entity).billboard) {const origins = getAnchorOrigins(anchor());get(entity).position = new ConstantPositionProperty(getCartesian3FromCoordinate(coordinate()));get(entity).billboard.image = new ConstantProperty(image());get(entity).billboard.scale = new ConstantProperty(scale());get(entity).billboard.color = new ConstantProperty(Color.fromCssColorString(color()));get(entity).billboard.horizontalOrigin = new ConstantProperty(origins.horizontal);get(entity).billboard.verticalOrigin = new ConstantProperty(origins.vertical);get(entity).billboard.distanceDisplayCondition = new ConstantProperty(distanceDisplayCondition() ? new DistanceDisplayCondition(distanceDisplayCondition().near,distanceDisplayCondition().far) : void 0);get(entity).billboard.show = new ConstantProperty(show());}});user_effect(() => {if (get(entity) && onSelect()) {let cleanup;addListener( get(entity),(_movement,clickedEntity) => {if (clickedEntity.id === id()) {onSelect()(id());}},"LEFT_CLICK" ).then((subscription) => {cleanup = () => subscription.unsubscribe();}).catch(console.error);return () => cleanup == null ? void 0 : cleanup();}});return pop({get id() {return id();},set id($$value) {id($$value);flush_sync();},get coordinate() {return coordinate();},set coordinate($$value) {coordinate($$value);flush_sync();},get image() {return image();},set image($$value) {image($$value);flush_sync();},get scale() {return scale();},set scale($$value = 1) {scale($$value);flush_sync();},get color() {return color();},set color($$value = atob("I2ZmZmZmZg==")) {color($$value);flush_sync();},get anchor() {return anchor();},set anchor($$value = 5) {anchor($$value);flush_sync();},get distanceDisplayCondition() {return distanceDisplayCondition();},set distanceDisplayCondition($$value) {distanceDisplayCondition($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();},get onSelect() {return onSelect();},set onSelect($$value) {onSelect($$value);flush_sync();}});} create_custom_element( Billboard,{id: {},coordinate: {},image: {},scale: {},color: {},anchor: {},distanceDisplayCondition: {},show: {},onSelect: {}},[],[],true );var root$1 = template(`<div class="mini-map-container svelte-67g3qh"><!></div>`);const $$css$1 = {hash: "svelte-67g3qh",code: ".mini-map-container.svelte-67g3qh {background-color:rgb(0,0,0);overflow:hidden;}"};function MiniMap($$anchor,$$props) {push($$props,true);append_styles($$anchor,$$css$1);let width = prop($$props,"width",7,200),height = prop($$props,"height",7,200),baseCameraHeight = prop($$props,"baseCameraHeight",7,5e4),maxCameraHeight = prop($$props,"maxCameraHeight",7,1e6),viewportFrameColor = prop($$props,"viewportFrameColor",7,atob("I0ZGRkYwMEND")),viewportFrameWidth = prop($$props,"viewportFrameWidth",7,3),children = prop($$props,"children",7);const mainCoreState = getCoreState();const miniMapCoreState = createCoreState();let miniMapContainer;let viewportPrimitive = null;function calculateViewportCorners() {const {viewer} = mainCoreState;if (!viewer) return null;const {scene,camera} = viewer;const {canvas} = scene;const corners = [ camera.pickEllipsoid(new Cartesian3(0,0,0),scene.globe.ellipsoid),camera.pickEllipsoid(new Cartesian3(canvas.clientWidth,0,0),scene.globe.ellipsoid),camera.pickEllipsoid(new Cartesian3(canvas.clientWidth,canvas.clientHeight,0),scene.globe.ellipsoid),camera.pickEllipsoid(new Cartesian3(0,canvas.clientHeight,0),scene.globe.ellipsoid) ];if (corners.some((corner) => !corner)) return null;return [...corners,corners[0]];} function getMainCameraPosition() {const {viewer} = mainCoreState;if (!viewer) return null;const cartographic = viewer.scene.globe.ellipsoid.cartesianToCartographic(viewer.camera.position);return {longitude: CesiumMath.toDegrees(cartographic.longitude),latitude: CesiumMath.toDegrees(cartographic.latitude),height: cartographic.height};} function calculateViewportBounds() {const corners = calculateViewportCorners();if (!corners) return null;const validCorners = corners.slice(0,-1).filter(Boolean);const bounds = validCorners.reduce( (acc,corner) => {var _a;const cartographic = (_a = mainCoreState.viewer) == null ? void 0 : _a.scene.globe.ellipsoid.cartesianToCartographic(corner);if (cartographic) {const lon = CesiumMath.toDegrees(cartographic.longitude);const lat = CesiumMath.toDegrees(cartographic.latitude);acc.minLon = Math.min(acc.minLon,lon);acc.maxLon = Math.max(acc.maxLon,lon);acc.minLat = Math.min(acc.minLat,lat);acc.maxLat = Math.max(acc.maxLat,lat);} return acc;},{minLon: Number.POSITIVE_INFINITY,maxLon: Number.NEGATIVE_INFINITY,minLat: Number.POSITIVE_INFINITY,maxLat: Number.NEGATIVE_INFINITY} );return {centerLon: (bounds.minLon + bounds.maxLon) / 2,centerLat: (bounds.minLat + bounds.maxLat) / 2,width: bounds.maxLon - bounds.minLon,height: bounds.maxLat - bounds.minLat};} function calculateMiniMapCenterAndHeight() {const cameraPos = getMainCameraPosition();if (!cameraPos) return null;const bounds = cameraPos.height <= maxCameraHeight() ? calculateViewportBounds() : null;if (bounds) {const maxRange = Math.max(bounds.width,bounds.height);const calculatedHeight = Math.max(baseCameraHeight(),maxRange * 111320 * 2);return {longitude: bounds.centerLon,latitude: bounds.centerLat,height: Math.min(calculatedHeight,maxCameraHeight())};} else {return {longitude: cameraPos.longitude,latitude: cameraPos.latitude,height: baseCameraHeight()};}} function updateViewportFrame() {const {viewer: miniViewer} = miniMapCoreState;if (!miniViewer) return;if (viewportPrimitive) {miniViewer.scene.primitives.remove(viewportPrimitive);viewportPrimitive = null;} const cameraPos = getMainCameraPosition();if (!cameraPos || cameraPos.height > maxCameraHeight()) return;const corners = calculateViewportCorners();if (!corners) return;const polylineGeometry = new PolylineGeometry({positions: corners.filter(Boolean),width: viewportFrameWidth()});viewportPrimitive = new Primitive({geometryInstances: new GeometryInstance({geometry: polylineGeometry}),appearance: new PolylineMaterialAppearance({material: Material.fromType("Color",{color: Color.fromCssColorString(viewportFrameColor())})})});miniViewer.scene.primitives.add(viewportPrimitive);} function updateMiniMapView() {const {viewer: miniViewer} = miniMapCoreState;if (!miniViewer) return;const viewParams = calculateMiniMapCenterAndHeight();if (!viewParams) return;miniViewer.scene.mode = SceneMode.SCENE2D;miniViewer.camera.setView({destination: Cartesian3.fromDegrees(viewParams.longitude,viewParams.latitude,viewParams.height),orientation: {heading: 0,pitch: CesiumMath.toRadians(-90),roll: 0}});} user_effect(() => {if (!miniMapContainer) return;const miniViewer = new Viewer(miniMapContainer,{scene3DOnly: false,timeline: false,sceneModePicker: false,baseLayerPicker: false,baseLayer: false,infoBox: false,animation: false,geocoder: false,homeButton: false,navigationHelpButton: false,fullscreenButton: false,vrButton: false});miniViewer.cesiumWidget.creditContainer.style.display = "none";const eventHandler = miniViewer.cesiumWidget.screenSpaceEventHandler;const eventTypes = [ ScreenSpaceEventType.LEFT_CLICK,ScreenSpaceEventType.LEFT_DOUBLE_CLICK,ScreenSpaceEventType.RIGHT_CLICK,ScreenSpaceEventType.MIDDLE_CLICK,ScreenSpaceEventType.WHEEL,ScreenSpaceEventType.LEFT_DOWN,ScreenSpaceEventType.LEFT_UP,ScreenSpaceEventType.MOUSE_MOVE ];eventTypes.forEach((type) => eventHandler.removeInputAction(type));miniMapCoreState.viewer = miniViewer;tick().then(updateMiniMapView);return () => {if (viewportPrimitive) {miniViewer.scene.primitives.remove(viewportPrimitive);} miniViewer.destroy();};});user_effect(() => {const {viewer: mainViewer} = mainCoreState;if (!mainViewer) return;let isUpdating = false;const updateHandler = () => {if (isUpdating) return;isUpdating = true;requestAnimationFrame(() => {updateMiniMapView();updateViewportFrame();isUpdating = false;});};return mainViewer.camera.changed.addEventListener(updateHandler);});const containerStyle = derived(() => atob("d2lkdGg6IA==") + width() + atob("cHg7IGhlaWdodDog") + height() + atob("cHg7IGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwKTsgb3ZlcmZsb3c6IGhpZGRlbjs="));var div = root$1();var node = child(div);snippet(node,() => children() ?? noop);reset(div);bind_this(div,($$value) => miniMapContainer = $$value,() => miniMapContainer);template_effect(() => set_attribute(div,"style",get(containerStyle)));append($$anchor,div);return pop({get width() {return width();},set width($$value = 200) {width($$value);flush_sync();},get height() {return height();},set height($$value = 200) {height($$value);flush_sync();},get baseCameraHeight() {return baseCameraHeight();},set baseCameraHeight($$value = 5e4) {baseCameraHeight($$value);flush_sync();},get maxCameraHeight() {return maxCameraHeight();},set maxCameraHeight($$value = 1e6) {maxCameraHeight($$value);flush_sync();},get viewportFrameColor() {return viewportFrameColor();},set viewportFrameColor($$value = atob("I0ZGRkYwMEND")) {viewportFrameColor($$value);flush_sync();},get viewportFrameWidth() {return viewportFrameWidth();},set viewportFrameWidth($$value = 3) {viewportFrameWidth($$value);flush_sync();},get children() {return children();},set children($$value) {children($$value);flush_sync();}});} create_custom_element( MiniMap,{width: {},height: {},baseCameraHeight: {},maxCameraHeight: {},viewportFrameColor: {},viewportFrameWidth: {},children: {}},[],[],true );function RegionalClouds($$anchor,$$props) {push($$props,true);const CLOUD_STYLES = {cumulus: {scaleX: [2e3,4e3],scaleYRatio: [0.4,0.8],maxSizeXRatio: [1,1.4],maxSizeYRatio: [0.9,1.3],maxSizeZRatio: [0.5,0.8],slice: [0.6,0.9],count: [12,20],heightVariation: 400},stratus: {scaleX: [3e3,5e3],scaleYRatio: [0.3,0.6],maxSizeXRatio: [1.2,1.6],maxSizeYRatio: [1.1,1.5],maxSizeZRatio: [0.3,0.5],slice: [0.3,0.6],count: [10,16],heightVariation: 200},cirrus: {scaleX: [1500,3e3],scaleYRatio: [0.5,0.9],maxSizeXRatio: [0.8,1.2],maxSizeYRatio: [0.7,1.3],maxSizeZRatio: [0.2,0.4],slice: [0.1,0.4],count: [8,14],heightVariation: 600}};let show = prop($$props,"show",15,true),centerLongitude = prop($$props,"centerLongitude",7,121.5),centerLatitude = prop($$props,"centerLatitude",7,25),coverage = prop($$props,"coverage",7,15),altitude = prop($$props,"altitude",7,2e3),density = prop($$props,"density",7,0.7),size = prop($$props,"size",7,0.8),variation = prop($$props,"variation",7,0.6),brightness = prop($$props,"brightness",7,1),opacity = prop($$props,"opacity",7,0.8),style = prop($$props,"style",7,"cumulus");const coreState = getCoreState();let cloudCollection = void 0;let clouds = [];function kmToDegrees(km,latitude) {const kmPerDegree = latitude ? 111.32 * Math.cos(CesiumMath.toRadians(latitude)) : 111.32;return km / kmPerDegree;} function random(min2,max2) {return Math.random() * (max2 - min2) + min2;} function lerp(min2,max2,factor) {return min2 + (max2 - min2) * Math.max(0,Math.min(1,factor));} function calculateCloudParameters(styleConfig,userDensity,userSize,userVariation) {const count = Math.floor(lerp(styleConfig.count[0],styleConfig.count[1],userDensity));const scaleX = lerp(styleConfig.scaleX[0],styleConfig.scaleX[1],userSize);const scaleYRatio = lerp(styleConfig.scaleYRatio[0] * (1 - userVariation * 0.3),styleConfig.scaleYRatio[1] * (1 + userVariation * 0.3),Math.random());const scaleY = scaleX * scaleYRatio;const maxSizeXRatio = lerp(styleConfig.maxSizeXRatio[0],styleConfig.maxSizeXRatio[1],userVariation);const maxSizeYRatio = lerp(styleConfig.maxSizeYRatio[0],styleConfig.maxSizeYRatio[1],userVariation);const maxSizeZRatio = lerp(styleConfig.maxSizeZRatio[0],styleConfig.maxSizeZRatio[1],userVariation);const slice = lerp(styleConfig.slice[0],styleConfig.slice[1],userVariation);return {count,scaleX,scaleY,maxSizeX: scaleX * maxSizeXRatio,maxSizeY: scaleY * maxSizeYRatio,maxSizeZ: scaleX * maxSizeZRatio,slice};} function generateCloudPositions(centerLon,centerLat,coverageKm,count,variation2) {const positions = [];const latRange = kmToDegrees(coverageKm);const lonRange = kmToDegrees(coverageKm,centerLat);const clusterMode = variation2 > 0.5;if (clusterMode) {const clusterCount = Math.min(3,Math.max(2,Math.ceil(count / 8)));const cloudsPerCluster = Math.ceil(count / clusterCount);for (let cluster = 0;cluster < clusterCount;cluster++) {const clusterDistance = random(0.3,0.8);const clusterAngle = random(0,Math.PI * 2);const clusterLon = centerLon + Math.cos(clusterAngle) * clusterDistance * (lonRange / 2);const clusterLat = centerLat + Math.sin(clusterAngle) * clusterDistance * (latRange / 2);const remainingClouds = Math.min(cloudsPerCluster,count - cluster * cloudsPerCluster);for (let i = 0;i < remainingClouds;i++) {const localRadius = random(0,0.2) * Math.sqrt(random(0,1));const localAngle = random(0,Math.PI * 2);positions.push({longitude: clusterLon + Math.cos(localAngle) * localRadius * lonRange,latitude: clusterLat + Math.sin(localAngle) * localRadius * latRange});}}} else {for (let i = 0;i < count;i++) {const distance = random(0.1,0.9);const angle = random(0,Math.PI * 2);const offsetLon = Math.cos(angle) * distance * (lonRange / 2);const offsetLat = Math.sin(angle) * distance * (latRange / 2);positions.push({longitude: centerLon + offsetLon,latitude: centerLat + offsetLat});}} return positions;} function generateClouds() {if (!cloudCollection) return;cloudCollection.removeAll();clouds = [];const styleConfig = CLOUD_STYLES[style()];const cloudParams = calculateCloudParameters(styleConfig,density(),size(),variation());const positions = generateCloudPositions(centerLongitude(),centerLatitude(),coverage(),cloudParams.count,variation());positions.forEach((pos) => {const scaleXMin = styleConfig.scaleX[0] * size();const scaleXMax = styleConfig.scaleX[1] * size();const scaleX = random(scaleXMin,scaleXMax);const scaleYRatioMin = styleConfig.scaleYRatio[0] * (1 - variation() * 0.3);const scaleYRatioMax = styleConfig.scaleYRatio[1] * (1 + variation() * 0.3);const scaleYRatio = random(scaleYRatioMin,scaleYRatioMax);const scaleY = scaleX * scaleYRatio;const maxSizeXRatioMin = styleConfig.maxSizeXRatio[0] * (1 - variation() * 0.2);const maxSizeXRatioMax = styleConfig.maxSizeXRatio[1] * (1 + variation() * 0.2);const maxSizeX = scaleX * random(maxSizeXRatioMin,maxSizeXRatioMax);const maxSizeYRatioMin = styleConfig.maxSizeYRatio[0] * (1 - variation() * 0.2);const maxSizeYRatioMax = styleConfig.maxSizeYRatio[1] * (1 + variation() * 0.2);const maxSizeY = scaleY * random(maxSizeYRatioMin,maxSizeYRatioMax);const maxSizeZRatioMin = styleConfig.maxSizeZRatio[0] * (1 - variation() * 0.2);const maxSizeZRatioMax = styleConfig.maxSizeZRatio[1] * (1 + variation() * 0.2);const maxSizeZ = scaleX * random(maxSizeZRatioMin,maxSizeZRatioMax);const sliceMin = styleConfig.slice[0] * (1 - variation() * 0.15);const sliceMax = styleConfig.slice[1] * (1 + variation() * 0.15);const slice = random(sliceMin,sliceMax);const cloudAltitude = altitude() + random(-styleConfig.heightVariation,styleConfig.heightVariation);const cloud = cloudCollection.add({position: Cartesian3.fromDegrees(pos.longitude,pos.latitude,cloudAltitude),scale: new Cartesian2(scaleX,scaleY),maximumSize: new Cartesian3(maxSizeX,maxSizeY,maxSizeZ),slice: Math.max(0.1,Math.min(0.9,slice)),color: Color.WHITE.withAlpha(opacity()),brightness: brightness()});clouds.push(cloud);});} user_effect(() => {if (!coreState.viewer || cloudCollection) return;try {const viewer = coreState.viewer;try {if (!viewer.scene.context.webgl2) {console.warn(atob("8J+Mq++4jyBSZWdpb25hbENsb3VkczogV2ViR0wyIG5vdCBzdXBwb3J0ZWQsIGNsb3VkcyBtYXkgbm90IHdvcmsgcHJvcGVybHk="));}} catch {} cloudCollection = new CloudCollection({noiseDetail: 16});viewer.scene.primitives.add(cloudCollection);} catch (error) {console.error(atob("8J+Mq++4jyBSZWdpb25hbENsb3VkczogRXJyb3IgY3JlYXRpbmcgcmVnaW9uYWwgY2xvdWRzOg=="),error);}});user_effect(() => {if (cloudCollection) {cloudCollection.show = show();}});user_effect(() => {if (!coreState.viewer || !cloudCollection) return;void centerLongitude();void centerLatitude();void coverage();void altitude();void density();void size();void variation();void style();try {generateClouds();} catch (error) {console.error(atob("8J+Mq++4jyBSZWdpb25hbENsb3VkczogRXJyb3IgZHVyaW5nIGNsb3VkIGdlbmVyYXRpb246"),error);}});user_effect(() => {if (clouds.length > 0) {clouds.forEach((cloud) => {if (cloud) {cloud.color = Color.WHITE.withAlpha(opacity());cloud.brightness = brightness();}});}});onDestroy(() => {if (coreState.viewer && !coreState.viewer.isDestroyed() && cloudCollection) {coreState.viewer.scene.primitives.remove(cloudCollection);cloudCollection = void 0;clouds = [];}});return pop({get show() {return show();},set show($$value = true) {show($$value);flush_sync();},get centerLongitude() {return centerLongitude();},set centerLongitude($$value = 121.5) {centerLongitude($$value);flush_sync();},get centerLatitude() {return centerLatitude();},set centerLatitude($$value = 25) {centerLatitude($$value);flush_sync();},get coverage() {return coverage();},set coverage($$value = 15) {coverage($$value);flush_sync();},get altitude() {return altitude();},set altitude($$value = 2e3) {altitude($$value);flush_sync();},get density() {return density();},set density($$value = 0.7) {density($$value);flush_sync();},get size() {return size();},set size($$value = 0.8) {size($$value);flush_sync();},get variation() {return variation();},set variation($$value = 0.6) {variation($$value);flush_sync();},get brightness() {return brightness();},set brightness($$value = 1) {brightness($$value);flush_sync();},get opacity() {return opacity();},set opacity($$value = 0.8) {opacity($$value);flush_sync();},get style() {return style();},set style($$value = "cumulus") {style($$value);flush_sync();}});} create_custom_element( RegionalClouds,{show: {},centerLongitude: {},centerLatitude: {},coverage: {},altitude: {},density: {},size: {},variation: {},brightness: {},opacity: {},style: {}},[],[],true );function RotatingDashedCircle($$anchor,$$props) {push($$props,true);let RotatingDashedCirclePrimitive2 = null;let coordinate = prop($$props,"coordinate",7),radius = prop($$props,"radius",7),rotationSpeed = prop($$props,"rotationSpeed",7,2),dashLength = prop($$props,"dashLength",7,4),gapLength = prop($$props,"gapLength",7,2),color = prop($$props,"color",7,atob("IzAwZmYwMA==")),width = prop($$props,"width",7,2),show = prop($$props,"show",7,true);const coreState = getCoreState();const viewer = derived(() => coreState.viewer);let primitive = void 0;function safeColorConversion(colorStr) {try {return Color.fromCssColorString(colorStr);} catch (error) {console.warn(atob("Um90YXRpbmdEYXNoZWRDaXJjbGU6IEludmFsaWQgY29sb3IgIiR7Y29sb3JTdHJ9IiwgdXNpbmcgZ3JlZW4="));return Color.GREEN;}} async function loadPrimitiveClass() {if (!RotatingDashedCirclePrimitive2) {const module = await Promise.resolve().then(() => RotatingDashedCirclePrimitive$1);RotatingDashedCirclePrimitive2 = module.default;} return RotatingDashedCirclePrimitive2;} user_effect(() => {coordinate();radius();width();get(viewer);if (!get(viewer)) return;let currentPrimitive = null;loadPrimitiveClass().then((PrimitiveClass) => {if (primitive) {get(viewer).scene.primitives.remove(primitive);} currentPrimitive = new PrimitiveClass(coordinate(),{radius: Math.max(1,radius()),rotationSpeed: Math.abs(rotationSpeed()),dashLength: Math.max(0.1,dashLength()),gapLength: Math.max(0.1,gapLength()),width: Math.max(1,width()),color: safeColorConversion(color())});primitive = currentPrimitive;primitive.show = show();get(viewer).scene.primitives.add(primitive);primitive.startAnimation(get(viewer));}).catch((error) => {console.error(atob("Um90YXRpbmdEYXNoZWRDaXJjbGU6IEZhaWxlZCB0byBjcmVhdGUgcHJpbWl0aXZlOg=="),error);});return () => {var _a;if (primitive && ((_a = get(viewer)) == null ? void 0 : _a.scene) && !get(viewer).isDestroyed()) {try {get(viewer).scene.primitives.remove(primitive);} catch (error) {console.warn(atob("Um90YXRpbmdEYXNoZWRDaXJjbGU6IEVycm9yIGR1cmluZyBjbGVhbnVwOg=="),error);} primitive = void 0;}};});user_effect(() => {rotationSpeed();dashLength();gapLength();color();if (primitive && primitive.updateMaterialProperties) {primitive.updateMaterialProperties({speed: Math.abs(rotationSpeed()),dashLength: Math.max(0.1,dashLength()),gapLength: Math.max(0.1,gapLength()),color: safeColorConversion(color())});} else if (primitive) {if (primitive.appearance && primitive.appearance.material) {const material = primitive.appearance.material;material.uniforms.speed = Math.abs(rotationSpeed());material.uniforms.dashLength = Math.max(0.1,dashLength());material.uniforms.gapLength = Math.max(0.1,gapLength());material.uniforms.color = safeColorConversion(color());}}});user_effect(() => {show();if (primitive) {primitive.show = show();}});return pop({get coordinate() {return coordinate();},set coordinate($$value) {coordinate($$value);flush_sync();},get radius() {return radius();},set radius($$value) {radius($$value);flush_sync();},get rotationSpeed() {return rotationSpeed();},set rotationSpeed($$value = 2) {rotationSpeed($$value);flush_sync();},get dashLength() {return dashLength();},set dashLength($$value = 4) {dashLength($$value);flush_sync();},get gapLength() {return gapLength();},set gapLength($$value = 2) {gapLength($$value);flush_sync();},get color() {return color();},set color($$value = atob("IzAwZmYwMA==")) {color($$value);flush_sync();},get width() {return width();},set width($$value = 2) {width($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();}});} create_custom_element( RotatingDashedCircle,{coordinate: {},radius: {},rotationSpeed: {},dashLength: {},gapLength: {},color: {},width: {},show: {}},[],[],true );function ExpandingRipple($$anchor,$$props) {push($$props,true);let ExpandingRipplePrimitive2 = null;let coordinate = prop($$props,"coordinate",7),radius = prop($$props,"radius",7,100),speed = prop($$props,"speed",7,0.3),pulseFrequency = prop($$props,"pulseFrequency",7,1),waveCount = prop($$props,"waveCount",7,3),innerColor = prop($$props,"innerColor",7,atob("I2RkMDAwMDg4")),outerColor = prop($$props,"outerColor",7,atob("I2ZmZmZmZjAw")),waveThickness = prop($$props,"waveThickness",7,0.02),width = prop($$props,"width",7,3),show = prop($$props,"show",7,true);const coreState = getCoreState();const viewer = derived(() => coreState.viewer);let primitive = void 0;function safeColorConversion(colorStr) {try {return Color.fromCssColorString(colorStr);} catch (error) {console.warn(atob("RXhwYW5kaW5nUmlwcGxlOiBJbnZhbGlkIGNvbG9yICIke2NvbG9yU3RyfSIsIHVzaW5nIHJlZA=="));return Color.RED;}} async function loadPrimitiveClass() {if (!ExpandingRipplePrimitive2) {const module = await Promise.resolve().then(() => ExpandingRipplePrimitive$1);ExpandingRipplePrimitive2 = module.default;} return ExpandingRipplePrimitive2;} user_effect(() => {if (!get(viewer)) return;const currentShow = untrack(() => show());let isInitialCreation = !primitive;loadPrimitiveClass().then((PrimitiveClass) => {if (primitive && isInitialCreation) {primitive.stopAnimation();get(viewer).scene.primitives.remove(primitive.getPrimitive());primitive.destroy();} const validatedConfig = {radius: Math.max(1,radius()),speed: Math.max(0.01,Math.abs(speed())),pulseFrequency: Math.max(0.1,Math.abs(pulseFrequency())),waveCount: Math.max(1,Math.min(10,Math.round(waveCount()))),innerColor: safeColorConversion(innerColor()),outerColor: safeColorConversion(outerColor()),waveThickness: Math.max(0.01,Math.min(1,waveThickness())),width: Math.max(1,Math.min(10,width()))};const newPrimitive = new PrimitiveClass(coordinate(),validatedConfig);primitive = newPrimitive;primitive.show = currentShow;const cesiumPrimitive = primitive.getPrimitive();if (cesiumPrimitive) {get(viewer).scene.primitives.add(cesiumPrimitive);primitive.startAnimation(get(viewer));} else {console.error(atob("RXhwYW5kaW5nUmlwcGxlOiBGYWlsZWQgdG8gZ2V0IGNlc2l1bSBwcmltaXRpdmUgZnJvbSB3cmFwcGVy"));}}).catch((error) => {console.error(atob("RXhwYW5kaW5nUmlwcGxlOiBGYWlsZWQgdG8gY3JlYXRlIHByaW1pdGl2ZTo="),error);});return () => {var _a;if (primitive && ((_a = get(viewer)) == null ? void 0 : _a.scene) && !get(viewer).isDestroyed()) {try {primitive.stopAnimation();const cesiumPrimitive = primitive.getPrimitive();if (cesiumPrimitive) {get(viewer).scene.primitives.remove(cesiumPrimitive);} primitive.destroy();} catch (error) {console.warn(atob("RXhwYW5kaW5nUmlwcGxlOiBFcnJvciBkdXJpbmcgY2xlYW51cDo="),error);} primitive = void 0;}};});user_effect(() => {if (primitive && primitive.show !== show()) {primitive.show = show();const cesiumPrimitive = primitive.getPrimitive();if (cesiumPrimitive && cesiumPrimitive.show !== show()) {cesiumPrimitive.show = show();}}});return pop({get coordinate() {return coordinate();},set coordinate($$value) {coordinate($$value);flush_sync();},get radius() {return radius();},set radius($$value = 100) {radius($$value);flush_sync();},get speed() {return speed();},set speed($$value = 0.3) {speed($$value);flush_sync();},get pulseFrequency() {return pulseFrequency();},set pulseFrequency($$value = 1) {pulseFrequency($$value);flush_sync();},get waveCount() {return waveCount();},set waveCount($$value = 3) {waveCount($$value);flush_sync();},get innerColor() {return innerColor();},set innerColor($$value = atob("I2RkMDAwMDg4")) {innerColor($$value);flush_sync();},get outerColor() {return outerColor();},set outerColor($$value = atob("I2ZmZmZmZjAw")) {outerColor($$value);flush_sync();},get waveThickness() {return waveThickness();},set waveThickness($$value = 0.02) {waveThickness($$value);flush_sync();},get width() {return width();},set width($$value = 3) {width($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();}});} create_custom_element( ExpandingRipple,{coordinate: {},radius: {},speed: {},pulseFrequency: {},waveCount: {},innerColor: {},outerColor: {},waveThickness: {},width: {},show: {}},[],[],true );function GroundPolygon($$anchor,$$props) {push($$props,true);const id = prop($$props,"id",7),coordinates = prop($$props,"coordinates",7),color = prop($$props,"color",7,atob("I2ZmMDAwMDgw")),show = prop($$props,"show",7,true),onpick = prop($$props,"onpick",7),showOutline = prop($$props,"showOutline",7,false),outlineColor = prop($$props,"outlineColor",7,atob("I2ZmZmZmZg==")),outlineWidth = prop($$props,"outlineWidth",7,2),outlineStyle = prop($$props,"outlineStyle",7,"solid"),dashLength = prop($$props,"dashLength",7,16),gapColor = prop($$props,"gapColor",7),dashPattern = prop($$props,"dashPattern",7);const coreState = getCoreState();const {addGlobalListener} = useGlobalEvent();let groundPrimitive = state(null);let outlinePrimitive = state(null);let eventCleanup;let isInitialized = state(false);user_effect(() => {if (coreState.viewer && coordinates().length >= 3 && !get(groundPrimitive) && !get(isInitialized)) {untrack(() => initializePolygon());}});user_effect(() => {if (get(isInitialized) && get(groundPrimitive)) {get(groundPrimitive).show = show();} if (get(isInitialized) && get(outlinePrimitive)) {get(outlinePrimitive).show = show() && showOutline();}});user_effect(() => {showOutline();untrack(() => {if (get(isInitialized) && showOutline() && !get(outlinePrimitive) && get(groundPrimitive)) {initializeOutline().catch((error) => {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmCiuahhuWIneWni+WMluWkseaVlzo="),error);});} else if (get(isInitialized) && !showOutline() && get(outlinePrimitive)) {if (coreState.viewer) {coreState.viewer.scene.groundPrimitives.remove(get(outlinePrimitive));set(outlinePrimitive,null);}}});});user_effect(() => {color();untrack(() => {if (get(isInitialized) && get(groundPrimitive) && coreState.viewer) {updateColor().catch((error) => {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmfv+aHieW8j+mhj+iJsuabtOaWsOWkseaVlzo="),error);});}});});user_effect(() => {outlineColor();dashLength();gapColor();dashPattern();untrack(() => {if (get(isInitialized) && get(outlinePrimitive) && showOutline() && coreState.viewer) {updateOutlineMaterial().catch((error) => {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmCiuahhuadkOizquabtOaWsOWkseaVlzo="),error);});}});});user_effect(() => {outlineWidth();outlineStyle();untrack(() => {if (get(isInitialized) && get(outlinePrimitive) && showOutline() && coreState.viewer) {updateOutlineAppearance().catch((error) => {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmCiuahhuWkluingOabtOaWsOWkseaVlzo="),error);});}});});async function initializePolygon() {if (!coreState.viewer) return;try {if (coordinates().length < 3) {console.warn(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9OiDpnIDopoHoh7PlsJEz5YCL5bqn5qiZ6bue5L6G5qeL5oiQ5bCB6ZaJ5Y2A5Z+f"));return;} const degreesArray = [];coordinates().forEach((coord) => {degreesArray.push(coord.longitude,coord.latitude);});const cartesian3Points = Cartesian3.fromDegreesArray(degreesArray);const polygonHierarchy = new PolygonHierarchy(cartesian3Points);const cesiumColor = Color.fromCssColorString(color());const geometryInstance = new GeometryInstance({id: id(),geometry: new PolygonGeometry({polygonHierarchy,vertexFormat: PerInstanceColorAppearance.VERTEX_FORMAT}),attributes: {color: ColorGeometryInstanceAttribute.fromColor(cesiumColor)}});const primitive = new GroundPrimitive({geometryInstances: geometryInstance,appearance: new PerInstanceColorAppearance({translucent: cesiumColor.alpha < 1}),show: show()});coreState.viewer.scene.primitives.add(primitive);set(groundPrimitive,proxy(primitive));setupClickEventListener();if (showOutline()) {untrack(() => initializeOutline());} set(isInitialized,true);} catch (error) {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOWIneWni+WMluWkseaVlzo="),error);}} async function initializeOutline() {if (!coreState.viewer || coordinates().length < 3) return;try {if (!GroundPolylinePrimitive.isSupported(coreState.viewer.scene)) {console.warn(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9OiDmraTlubPlj7DkuI3mlK/mj7TlnLDpnaLosrzlkIjnt5rmrrXvvIzpgormoYblj6/og73nhKHms5XmraPnorrpoa/npLo="));return;} const degreesArray = [];coordinates().forEach((coord) => {degreesArray.push(coord.longitude,coord.latitude);});degreesArray.push(coordinates()[0].longitude,coordinates()[0].latitude);const cartesian3Points = Cartesian3.fromDegreesArray(degreesArray);const cesiumOutlineColor = Color.fromCssColorString(outlineColor());const geometryInstance = new GeometryInstance({id: atob("JHtpZCgpfS1vdXRsaW5l"),geometry: new GroundPolylineGeometry({positions: cartesian3Points,width: outlineWidth()})});let material;if (outlineStyle() === "dash") {const dashMaterialOptions = {color: cesiumOutlineColor};if (dashLength() !== void 0) {dashMaterialOptions.dashLength = dashLength();} if (gapColor()) {dashMaterialOptions.gapColor = Color.fromCssColorString(gapColor());} if (dashPattern() !== void 0) {dashMaterialOptions.dashPattern = dashPattern();} material = Material.fromType(Material.PolylineDashType,dashMaterialOptions);} else {material = Material.fromType(Material.ColorType,{color: cesiumOutlineColor});} const primitive = new GroundPolylinePrimitive({geometryInstances: geometryInstance,appearance: new PolylineMaterialAppearance({material}),show: show() && showOutline()});coreState.viewer.scene.groundPrimitives.add(primitive);set(outlinePrimitive,proxy(primitive));} catch (error) {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmCiuahhuWIneWni+WMluWkseaVlzo="),error);}} async function updateOutlineMaterial() {if (!get(outlinePrimitive) || !showOutline() || !coreState.viewer) return;try {const cesiumOutlineColor = Color.fromCssColorString(outlineColor());let material;if (outlineStyle() === "dash") {const dashMaterialOptions = {color: cesiumOutlineColor};if (dashLength() !== void 0) {dashMaterialOptions.dashLength = dashLength();} if (gapColor()) {dashMaterialOptions.gapColor = Color.fromCssColorString(gapColor());} if (dashPattern() !== void 0) {dashMaterialOptions.dashPattern = dashPattern();} material = Material.fromType(Material.PolylineDashType,dashMaterialOptions);} else {material = Material.fromType(Material.ColorType,{color: cesiumOutlineColor});} if (get(outlinePrimitive).appearance instanceof PolylineMaterialAppearance) {get(outlinePrimitive).appearance.material = material;}} catch (error) {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmCiuahhuadkOizquabtOaWsOWkseaVlzo="),error);await updateOutlineAppearance();}} async function updateOutlineAppearance() {if (!get(outlinePrimitive) || !showOutline()) return;try {if (coreState.viewer) {coreState.viewer.scene.groundPrimitives.remove(get(outlinePrimitive));set(outlinePrimitive,null);} await initializeOutline();} catch (error) {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmCiuahhuWkluingOabtOaWsOWkseaVlzo="),error);}} async function updateColor() {if (!get(groundPrimitive) || !coreState.viewer) return;try {const cesiumColor = Color.fromCssColorString(color());const attributes = get(groundPrimitive).getGeometryInstanceAttributes(id());if (attributes && attributes.color) {attributes.color = ColorGeometryInstanceAttribute.toValue(cesiumColor);if (get(groundPrimitive).appearance instanceof PerInstanceColorAppearance) {get(groundPrimitive).appearance.translucent = cesiumColor.alpha < 1;}} else {console.warn(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9OiDnhKHms5Xlj5blvpcgR2VvbWV0cnlJbnN0YW5jZSDlsazmgKfvvIzlsIfph43lu7rlpJrpgorlvaI="));await recreatePolygon();}} catch (error) {console.error(atob("R3JvdW5kUG9seWdvbiAke2lkKCl9IOmhj+iJsuabtOaWsOWkseaVlzo="),error);await recreatePolygon();}} async function recreatePolygon() {if (!coreState.viewer) return;if (get(groundPrimitive)) {coreState.viewer.scene.primitives.remove(get(groundPrimitive));set(groundPrimitive,null);} if (get(outlinePrimitive)) {coreState.viewer.scene.groundPrimitives.remove(get(outlinePrimitive));set(outlinePrimitive,null);} await initializePolygon();} function setupClickEventListener() {if (!onpick() || !get(groundPrimitive)) return;addGlobalListener( (_movement,pickResult) => {const result = pickResult;if (result && result.primitive === get(groundPrimitive)) {if (result.id === id()) {onpick()(id());}}},"LEFT_CLICK" ).then((subscription) => {eventCleanup = () => subscription.unsubscribe();}).catch(console.error);} function cleanup() {if (eventCleanup) {eventCleanup();eventCleanup = void 0;} if (get(groundPrimitive) && coreState.viewer) {coreState.viewer.scene.primitives.remove(get(groundPrimitive));set(groundPrimitive,null);} if (get(outlinePrimitive) && coreState.viewer) {coreState.viewer.scene.groundPrimitives.remove(get(outlinePrimitive));set(outlinePrimitive,null);} set(isInitialized,false);} onDestroy(() => {cleanup();});return pop({get id() {return id();},set id($$value) {id($$value);flush_sync();},get coordinates() {return coordinates();},set coordinates($$value) {coordinates($$value);flush_sync();},get color() {return color();},set color($$value = atob("I2ZmMDAwMDgw")) {color($$value);flush_sync();},get show() {return show();},set show($$value = true) {show($$value);flush_sync();},get onpick() {return onpick();},set onpick($$value) {onpick($$value);flush_sync();},get showOutline() {return showOutline();},set showOutline($$value = false) {showOutline($$value);flush_sync();},get outlineColor() {return outlineColor();},set outlineColor($$value = atob("I2ZmZmZmZg==")) {outlineColor($$value);flush_sync();},get outlineWidth() {return outlineWidth();},set outlineWidth($$value = 2) {outlineWidth($$value);flush_sync();},get outlineStyle() {return outlineStyle();},set outlineStyle($$value = "solid") {outlineStyle($$value);flush_sync();},get dashLength() {return dashLength();},set dashLength($$value = 16) {dashLength($$value);flush_sync();},get gapColor() {return gapColor();},set gapColor($$value) {gapColor($$value);flush_sync();},get dashPattern() {return dashPattern();},set dashPattern($$value) {dashPattern($$value);flush_sync();}});} create_custom_element( GroundPolygon,{id: {},coordinates: {},color: {},show: {},onpick: {},showOutline: {},outlineColor: {},outlineWidth: {},outlineStyle: {},dashLength: {},gapColor: {},dashPattern: {}},[],[],true );function TimeController($$anchor,$$props) {push($$props,true);const coreState = getCoreState();let shouldAnimate = prop($$props,"shouldAnimate",7,false),utcShiftHours = prop($$props,"utcShiftHours",7,0),onTimeTick = prop($$props,"onTimeTick",7,() => {}),format = prop($$props,"format",7,atob("WVlZWS1NTS1ERCBISDptbTpzcw==")),multiplier = prop($$props,"multiplier",7,1),now = prop($$props,"now",7);let localTime = state("");let time = derived(() => dayjs(get(localTime)).format(format()));user_effect(() => {var _a;(_a = onTimeTick()) == null ? void 0 : _a(get(time));});function onclock(clock) {const _localTime = JulianDate.toIso8601(JulianDate.addHours(clock.currentTime,utcShiftHours(),new JulianDate()));set(localTime,proxy(_localTime));} user_effect(() => {if (!coreState.viewer) return;if (now()) {const _now = dayjs(now()).toDate();coreState.viewer.clock.currentTime = JulianDate.fromDate(_now);}});user_effect(() => {if (!coreState.viewer) return;const _remove = coreState.viewer.clock.onTick.addEventListener(onclock);return () => {_remove();};});user_effect(() => {if (!coreState.viewer) return;coreState.viewer.clock.shouldAnimate = shouldAnimate();coreState.viewer.clock.multiplier = multiplier();});return pop({get shouldAnimate() {return shouldAnimate();},set shouldAnimate($$value = false) {shouldAnimate($$value);flush_sync();},get utcShiftHours() {return utcShiftHours();},set utcShiftHours($$value = 0) {utcShiftHours($$value);flush_sync();},get onTimeTick() {return onTimeTick();},set onTimeTick($$value = () => {}) {onTimeTick($$value);flush_sync();},get format() {return format();},set format($$value = atob("WVlZWS1NTS1ERCBISDptbTpzcw==")) {format($$value);flush_sync();},get multiplier() {return multiplier();},set multiplier($$value = 1) {multiplier($$value);flush_sync();},get now() {return now();},set now($$value) {now($$value);flush_sync();}});} create_custom_element( TimeController,{shouldAnimate: {},utcShiftHours: {},onTimeTick: {},format: {},multiplier: {},now: {}},[],[],true );let materialRegistered$1 = false;function registerRotatingDashedCircleMaterial(Material2) {if (typeof window === "undefined" || materialRegistered$1) {return;} try {const uniforms = {time: 0,speed: 1,dashLength: 10,gapLength: 5,color: new Color(0,1,0,1)};Material2.RotatingDashedCircleMaterialType = "RotatingDashedCircleMaterial";Material2._materialCache.addMaterial("RotatingDashedCircleMaterial",{fabric: {type: "RotatingDashedCircleMaterial",uniforms,source: atob("CgkJCQkJY3ptX21hdGVyaWFsIGN6bV9nZXRNYXRlcmlhbChjem1fbWF0ZXJpYWxJbnB1dCBtYXRlcmlhbElucHV0KSB7CgkJCQkJCWN6bV9tYXRlcmlhbCBtYXRlcmlhbCA9IGN6bV9nZXREZWZhdWx0TWF0ZXJpYWwobWF0ZXJpYWxJbnB1dCk7CgoJCQkJCQkvLyDoqIjnrpfml4vovYnlgY/np7sgKHNwZWVk55u05o6l5L2c54K65peL6L2J6YCf5bqm5YCN5pW4KQoJCQkJCQlmbG9hdCByb3RhdGlvbk9mZnNldCA9IHRpbWUgKiBzcGVlZCAqIDAuMTsKCgkJCQkJCS8vIOS9v+eUqOayv+e3mueahOe0i+eQhuWdkOaomXPvvIzkuKbliqDkuIrml4vovYnlgY/np7sKCQkJCQkJZmxvYXQgbGluZVBvc2l0aW9uID0gbWF0ZXJpYWxJbnB1dC5zdC5zICsgcm90YXRpb25PZmZzZXQ7CgoJCQkJCQkvLyDoqIjnrpfomZvnt5rlnJbmoYjvvIzlsIflj4PmlbjmraPopo/ljJbngrrlkIjpgannmoTnr4TlnI0KCQkJCQkJLy8gZGFzaExlbmd0aOWSjGdhcExlbmd0aOePvuWcqOebtOaOpeWwjeaHieimluimuuS4iueahOebuOWwjeWkp+WwjwoJCQkJCQlmbG9hdCB0b3RhbERhc2ggPSBkYXNoTGVuZ3RoICsgZ2FwTGVuZ3RoOwoJCQkJCQlmbG9hdCBkYXNoQ3ljbGUgPSB0b3RhbERhc2ggKiAwLjAxOyAvLyDln7rnpI7nuK7mlL4KCQkJCQkJZmxvYXQgbm9ybWFsaXplZFBvc2l0aW9uID0gZnJhY3QobGluZVBvc2l0aW9uIC8gZGFzaEN5Y2xlKTsKCgkJCQkJCS8vIOWcqOS4gOWAi+mAseacn+WFp++8jOagueaTmmRhc2hMZW5ndGjmr5Tkvovpoa/npLrlr6bnt5oKCQkJCQkJZmxvYXQgZGFzaFJhdGlvID0gZGFzaExlbmd0aCAvIHRvdGFsRGFzaDsKCQkJCQkJZmxvYXQgZGFzaFBhdHRlcm4gPSBzdGVwKG5vcm1hbGl6ZWRQb3NpdGlvbiwgZGFzaFJhdGlvKTsKCgkJCQkJCS8vIOaHieeUqOmhj+iJsuWSjOmAj+aYjuW6pgoJCQkJCQltYXRlcmlhbC5kaWZmdXNlID0gY29sb3IucmdiOwoJCQkJCQltYXRlcmlhbC5hbHBoYSA9IGNvbG9yLmEgKiBkYXNoUGF0dGVybjsKCQkJCQkJbWF0ZXJpYWwuZW1pc3Npb24gPSBjb2xvci5yZ2IgKiBkYXNoUGF0dGVybiAqIDAuMjsKCgkJCQkJCXJldHVybiBtYXRlcmlhbDsKCQkJCQl9CgkJCQk=")}});materialRegistered$1 = true;} catch (error) {console.warn( atob("54Sh5rOV6Ki75YaKIFJvdGF0aW5nRGFzaGVkQ2lyY2xlTWF0ZXJpYWwg5p2Q6LOq44CCQ2VzaXVtIE1hdGVyaWFsLl9tYXRlcmlhbENhY2hlIOWPr+iDveW3suiuiuabtOaIluS4jeWPr+eUqOOAgg=="),error );throw new Error( atob("Um90YXRpbmdEYXNoZWRDaXJjbGVNYXRlcmlhbCDmnZDos6roqLvlhorlpLHmlZfjgILmraTmnZDos6rlsIfnhKHms5Xkvb/nlKjjgILoq4vmqqLmn6UgQ2VzaXVtIOeJiOacrOebuOWuueaAp+WSjCBNYXRlcmlhbC5fbWF0ZXJpYWxDYWNoZSDnmoTlj6/nlKjmgKfjgII=") );}} class RotatingDashedCirclePrimitive extends Primitive {constructor(coordinate,config = {}) {if (typeof window === "undefined") {throw new Error( atob("Um90YXRpbmdEYXNoZWRDaXJjbGVQcmltaXRpdmUg5Y+q6IO95Zyo54CP6Ka95Zmo55Kw5aKD5Lit5bu656uL77yM6KuL5L2/55SoIGNyZWF0ZVJvdGF0aW5nRGFzaGVkQ2lyY2xlUHJpbWl0aXZlIOW3peW7oOWHveW8jw==") );} registerRotatingDashedCircleMaterial(Material);const {radius = 1e3,rotationSpeed = 1,dashLength = 10,gapLength = 5,width = 2,color = new Color(0,1,0,1)} = config;const positions = generateCirclePositions({Cartesian3,Math: CesiumMath},coordinate,radius);if (!materialRegistered$1) {throw new Error(atob("Um90YXRpbmdEYXNoZWRDaXJjbGVNYXRlcmlhbCDmnZDos6rmnKrmiJDlip/oqLvlhorvvIznhKHms5Xlu7rnq4vml4vovYnomZvnt5rlnJPlnIg="));} super({geometryInstances: new GeometryInstance({geometry: new PolylineGeometry({positions,width,vertexFormat: VertexFormat.POSITION_AND_ST,arcType: ArcType.GEODESIC}),id: generateUniqueId(atob("cm90YXRpbmctZGFzaGVkLWNpcmNsZQ=="))}),appearance: new PolylineMaterialAppearance({material: Material.fromType("RotatingDashedCircleMaterial",{time: 0,speed: rotationSpeed,dashLength,gapLength,color}),translucent: true}),asynchronous: false,releaseGeometryInstances: false,allowPicking: false});__publicField(this,"_RemoveCallback",() => {});} startAnimation(viewer,v = 1e3) {this._RemoveCallback();this._RemoveCallback = viewer.scene.preRender.addEventListener(() => {const material = this.appearance.material;material.uniforms.time = performance.now() / v;});return this._RemoveCallback;} updateMaterialProperties(config) {if (!this.appearance || !this.appearance.material) {console.warn(atob("Um90YXRpbmdEYXNoZWRDaXJjbGU6IOadkOizquacquWIneWni+WMlu+8jOeEoeazleabtOaWsOWxrOaApw=="));return;} const material = this.appearance.material;if (config.speed !== void 0) {material.uniforms.speed = Math.abs(config.speed);} if (config.dashLength !== void 0) {material.uniforms.dashLength = Math.max(0.1,config.dashLength);} if (config.gapLength !== void 0) {material.uniforms.gapLength = Math.max(0.1,config.gapLength);} if (config.color !== void 0) {material.uniforms.color = config.color;} if (material._dirty !== void 0) {material._dirty = true;}} destroy() {this._RemoveCallback();super.destroy();}} const RotatingDashedCirclePrimitive$1 = Object.freeze( Object.defineProperty({__proto__: null,default: RotatingDashedCirclePrimitive},Symbol.toStringTag,{value: "Module"}));let materialRegistered = false;function registerExpandingRippleMaterial(Material2) {if (typeof window === "undefined" || materialRegistered) {return;} try {const uniforms = {time: 0,speed: 0.5,maxRadius: 1,pulseFrequency: 2,waveCount: 3,innerColor: new Color(1,0.1,0,1),outerColor: new Color(1,0.6,0,0.4),waveThickness: 0.02};Material2.ExpandingRippleMaterialType = "ExpandingRippleMaterial";Material2._materialCache.addMaterial("ExpandingRippleMaterial",{fabric: {type: "ExpandingRippleMaterial",uniforms,source: atob("CgkJCQkJY3ptX21hdGVyaWFsIGN6bV9nZXRNYXRlcmlhbChjem1fbWF0ZXJpYWxJbnB1dCBtYXRlcmlhbElucHV0KSB7CgkJCQkJCWN6bV9tYXRlcmlhbCBtYXRlcmlhbCA9IGN6bV9nZXREZWZhdWx0TWF0ZXJpYWwobWF0ZXJpYWxJbnB1dCk7CgoJCQkJCQkvLyDoqIjnrpflvp7kuK3lv4Ppu57nmoTot53pm6IKCQkJCQkJdmVjMiBjZW50ZXIgPSB2ZWMyKDAuNSwgMC41KTsKCQkJCQkJdmVjMiBwb3MgPSBtYXRlcmlhbElucHV0LnN0OwoJCQkJCQlmbG9hdCBkaXN0YW5jZUZyb21DZW50ZXIgPSBsZW5ndGgocG9zIC0gY2VudGVyKTsKCgkJCQkJCS8vIOWfuuaWvOaZgumWk+WJteW7uuawtOazoue0i+aViOaenAoJCQkJCQlmbG9hdCBhbmltYXRpb25UaW1lID0gdGltZSAqIHNwZWVkOwoJCQkJCQlmbG9hdCB0b3RhbEludGVuc2l0eSA9IDAuMDsKCgkJCQkJCS8vIPCfk4gg5pWI6IO95YSq5YyW77ya5L2/55So5Zu65a6a6L+05ZyI5bGV6ZaL77yM5pSv5o+05pyA5aSaIDgg5YCL5rOi57SLCgkJCQkJCWZsb2F0IG1heFdhdmVzID0gbWluKHdhdmVDb3VudCwgOC4wKTsKCgkJCQkJCS8vIOmgkOioiOeul+WFseeUqOWAvOS7pea4m+WwkemHjeikh+ioiOeulwoJCQkJCQlmbG9hdCBjaXJjdWxhck1hc2sgPSAxLjAgLSBzbW9vdGhzdGVwKDAuNDUsIDAuNSwgZGlzdGFuY2VGcm9tQ2VudGVyKTsKCQkJCQkJZmxvYXQgdGhpY2tuZXNzID0gd2F2ZVRoaWNrbmVzczsKCgkJCQkJCS8vIOaJi+WLleWxlemWi+i/tOWciOS7peaPkOWNhyBHUFUg5pWI6IO9CgkJCQkJCWZvciAoaW50IGkgPSAwOyBpIDwgODsgaSsrKSB7CgkJCQkJCQlpZiAoZmxvYXQoaSkgPj0gbWF4V2F2ZXMpIGJyZWFrOwoKCQkJCQkJCWZsb2F0IGZpID0gZmxvYXQoaSk7CgkJCQkJCQlmbG9hdCB3YXZlRGVsYXkgPSBmaSAqIHB1bHNlRnJlcXVlbmN5OwoJCQkJCQkJZmxvYXQgd2F2ZVRpbWUgPSBhbmltYXRpb25UaW1lIC0gd2F2ZURlbGF5OwoKCQkJCQkJCWlmICh3YXZlVGltZSA+IDAuMCkgewoJCQkJCQkJCS8vIOeVtuWJjeazoue0i+eahOaTtOaVo+WNiuW+kSAoMC4wIOWIsCAwLjUpCgkJCQkJCQkJZmxvYXQgd2F2ZVJhZGl1cyA9IGZyYWN0KHdhdmVUaW1lIC8gcHVsc2VGcmVxdWVuY3kpICogMC41OwoKCQkJCQkJCQkvLyDoqIjnrpfnlbbliY3kvY3nva7mmK/lkKblnKjms6LntIvnr4TlnI3lhacKCQkJCQkJCQlmbG9hdCBkaXN0YW5jZVRvV2F2ZSA9IGFicyhkaXN0YW5jZUZyb21DZW50ZXIgLSB3YXZlUmFkaXVzKTsKCQkJCQkJCQlmbG9hdCB3YXZlSW50ZW5zaXR5ID0gMS4wIC0gc21vb3Roc3RlcCgwLjAsIHRoaWNrbmVzcywgZGlzdGFuY2VUb1dhdmUpOwoKCQkJCQkJCQkvLyDms6LntIvpmqjmk7TmlaPot53pm6LoobDmuJsKCQkJCQkJCQlmbG9hdCBmYWRlT3V0ID0gMS4wIC0gKHdhdmVSYWRpdXMgLyAwLjUpOwoJCQkJCQkJCXdhdmVJbnRlbnNpdHkgKj0gZmFkZU91dCAqIGNpcmN1bGFyTWFzazsKCgkJCQkJCQkJdG90YWxJbnRlbnNpdHkgKz0gd2F2ZUludGVuc2l0eSAqICgxLjAgLSBmaSAvIG1heFdhdmVzICogMC4zKTsKCQkJCQkJCX0KCQkJCQkJfQoKCQkJCQkJLy8g6ZmQ5Yi25by35bqmCgkJCQkJCXRvdGFsSW50ZW5zaXR5ID0gY2xhbXAodG90YWxJbnRlbnNpdHksIDAuMCwgMS4wKTsKCgkJCQkJCS8vIOmhj+iJsua3t+WQiAoJCQkJCQl2ZWMzIGZpbmFsQ29sb3IgPSBtaXgob3V0ZXJDb2xvci5yZ2IsIGlubmVyQ29sb3IucmdiLCB0b3RhbEludGVuc2l0eSk7CgoJCQkJCQkvLyDpgI/mmI7luqYgLSDlr6bnj77lvp7lr6blv4PliLDpgI/mmI7nmoTmvLjorooKCQkJCQkJZmxvYXQgZmluYWxBbHBoYSA9IHRvdGFsSW50ZW5zaXR5ICogbWl4KG91dGVyQ29sb3IuYSwgaW5uZXJDb2xvci5hLCB0b3RhbEludGVuc2l0eSk7CgoJCQkJCQkvLyDnmbzlhYnmlYjmnpwKCQkJCQkJdmVjMyBlbWlzc2lvbiA9IGZpbmFsQ29sb3IgKiB0b3RhbEludGVuc2l0eSAqIDAuMjsKCgkJCQkJCS8vIOioree9ruadkOizquWxrOaApwoJCQkJCQltYXRlcmlhbC5kaWZmdXNlID0gZmluYWxDb2xvcjsKCQkJCQkJbWF0ZXJpYWwuYWxwaGEgPSBmaW5hbEFscGhhOwoJCQkJCQltYXRlcmlhbC5lbWlzc2lvbiA9IGVtaXNzaW9uOwoJCQkJCQlyZXR1cm4gbWF0ZXJpYWw7CgkJCQkJfQoJCQkJ")}});materialRegistered = true;} catch (error) {console.warn( atob("54Sh5rOV6Ki75YaKIEV4cGFuZGluZ1JpcHBsZU1hdGVyaWFsIOadkOizquOAgkNlc2l1bSBNYXRlcmlhbC5fbWF0ZXJpYWxDYWNoZSDlj6/og73lt7Lorormm7TmiJbkuI3lj6/nlKjjgII="),error );throw new Error( atob("RXhwYW5kaW5nUmlwcGxlTWF0ZXJpYWwg5p2Q6LOq6Ki75YaK5aSx5pWX44CC5q2k5p2Q6LOq5bCH54Sh5rOV5L2/55So44CC6KuL5qqi5p+lIENlc2l1bSDniYjmnKznm7jlrrnmgKflkowgTWF0ZXJpYWwuX21hdGVyaWFsQ2FjaGUg55qE5Y+v55So5oCn44CC") );}} class ExpandingRipplePrimitive {constructor(coordinate,config) {__publicField(this,"primitive",null);__publicField(this,"animationRequestId",null);__publicField(this,"coordinate");__publicField(this,"config");__publicField(this,"instanceId");__publicField(this,"cachedMaterial",null);__publicField(this,"cachedUniforms",null);__publicField(this,"show",true);this.instanceId = generateUniqueId(atob("ZXhwYW5kaW5nLXJpcHBsZQ=="));registerExpandingRippleMaterial(Material);this.coordinate = coordinate;this.config = config;this.createPrimitive();} createPrimitive() {try {const geometryInstances = [];const maxRadius = this.config.radius * 2;const ellipseGeometry = new EllipseGeometry({center: Cartesian3.fromDegrees( this.coordinate.longitude,this.coordinate.latitude,this.coordinate.height || 0 ),semiMajorAxis: maxRadius,semiMinorAxis: maxRadius,height: this.coordinate.height || 100,vertexFormat: VertexFormat.POSITION_AND_ST});geometryInstances.push( new GeometryInstance({geometry: ellipseGeometry,id: this.instanceId}) );const appearance = new MaterialAppearance({material: new Material({fabric: {type: "ExpandingRippleMaterial",uniforms: {time: 0,speed: this.config.speed,maxRadius: 1,pulseFrequency: this.config.pulseFrequency,waveCount: this.config.waveCount,innerColor: this.config.innerColor,outerColor: this.config.outerColor,waveThickness: this.config.waveThickness}}})});this.primitive = new Primitive({geometryInstances,appearance,show: this.show});} catch (error) {console.error(atob("4p2MIEV4cGFuZGluZ1JpcHBsZVByaW1pdGl2ZTog5Ym15bu6IHByaW1pdGl2ZSDlpLHmlZc6"),error);throw error;}} startAnimation(viewer) {if (!this.primitive || !viewer) return;let animationTime = 0;let lastUpdateTime = 0;const targetFPS = 30;const frameInterval = 1e3 / targetFPS;const animate = () => {if (!this.primitive || !viewer.scene) return;const currentTime = performance.now();if (currentTime - lastUpdateTime < frameInterval) {return;} lastUpdateTime = currentTime;animationTime += this.config.speed * 0.05;this.updateMaterialAnimation(animationTime);};const removeListener = viewer.scene.postRender.addEventListener(animate);this.animationRequestId = removeListener;} updateMaterialAnimation(animationTime) {var _a;if (!this.primitive) return;if (!this.cachedMaterial || !this.cachedUniforms) {this.cachedMaterial = this.primitive.appearance.material;this.cachedUniforms = (_a = this.cachedMaterial) == null ? void 0 : _a.uniforms;} if (!this.cachedUniforms) return;this.cachedUniforms.time = animationTime;} stopAnimation() {if (this.animationRequestId) {if (typeof this.animationRequestId === "function") {this.animationRequestId();} else {cancelAnimationFrame(this.animationRequestId);} this.animationRequestId = null;} this.cachedMaterial = null;this.cachedUniforms = null;} updateGeometry(coordinate,radius) {this.coordinate = coordinate;if (radius !== void 0) {this.config.radius = radius;} this.createPrimitive();} recreateWithNewConfig(newConfig) {Object.assign(this.config,newConfig);this.createPrimitive();} destroy() {this.stopAnimation();this.primitive = null;} getPrimitive() {return this.primitive;}} const ExpandingRipplePrimitive$1 = Object.freeze( Object.defineProperty({__proto__: null,default: ExpandingRipplePrimitive},Symbol.toStringTag,{value: "Module"}));const viewModelCommandController = (viewer,homePosition,initNotFly) => {const destination = coordinateToCartesian3({height: homePosition.destination.height || 1e3,...homePosition.destination});const orientation = homePosition.orientation ? orientationToHeadingPitchRoll(homePosition.orientation) : void 0;const _homePosition = {destination,orientation};viewer.homeButton.viewModel.command.beforeExecute.addEventListener(_homeCommand);if (initNotFly) viewer.scene.camera.setView(_homePosition);else viewer.scene.camera.flyTo(_homePosition);function _homeCommand(e) {e.cancel = true;viewer.scene.camera.flyTo(_homePosition);} return {destroy: () => viewer.homeButton.viewModel.command.beforeExecute.removeEventListener(_homeCommand)};};class ViewerSizeState {constructor(viewer) {__privateAdd(this,_subscribe);__privateAdd(this,_viewer);__privateSet(this,_viewer,viewer);__privateSet(this,_subscribe,createSubscriber((updata) => {const off = on(window,"resize",updata);return () => off();}));} get size() {var _a,_b;__privateGet(this,_subscribe).call(this);return {width: ((_a = __privateGet(this,_viewer)) == null ? void 0 : _a.canvas.clientWidth) || 0,height: ((_b = __privateGet(this,_viewer)) == null ? void 0 : _b.canvas.clientHeight) || 0};}} _subscribe = new WeakMap();_viewer = new WeakMap();function layoutSizeController() {const coreState = getCoreState();const layoutSize = derived(() => (coreState == null ? void 0 : coreState.viewer) ? new ViewerSizeState(coreState == null ? void 0 : coreState.viewer).size : {width: 0,height: 0});user_effect(() => {coreState.layoutSize = get(layoutSize);});} var root = template(`<div class="CesiumCore svelte-qdfwxa"><!></div>`);const $$css = {hash: "svelte-qdfwxa",code: ".CesiumCore.svelte-qdfwxa {width:100%;height:100%;background-color:rgb(0,0,0);}"};function CesiumCoreView($$anchor,$$props) {push($$props,true);append_styles($$anchor,$$css);let ION_TOKEN = prop($$props,"ION_TOKEN",7),homePosition = prop($$props,"homePosition",7),onviewer = prop($$props,"onviewer",7),initNotFly = prop($$props,"initNotFly",7),children = prop($$props,"children",7),disableDepth = prop($$props,"disableDepth",7),disableSelectEntity = prop($$props,"disableSelectEntity",7,false),timeline = prop($$props,"timeline",7,false),showHomeButton = prop($$props,"showHomeButton",7,true),showGeocoder = prop($$props,"showGeocoder",7,true),showNavigationHelpButton = prop($$props,"showNavigationHelpButton",7,true),selectedId = prop($$props,"selectedId",15),scene2d = prop($$props,"scene2d",7,false),enableEventSubscriber = prop($$props,"enableEventSubscriber",7,true),eventSubscriberOptions = prop($$props,"eventSubscriberOptions",7);Ion.defaultAccessToken = ION_TOKEN() ?? "";const coreState = createCoreState();coreState.scene2d = !!scene2d();let CesiumCore;let eventSubscriber = state(void 0);let resolveEventSubscriber;if (enableEventSubscriber()) {const {context: eventSubscriberContext,resolve} = createEventSubscriberContext();resolveEventSubscriber = resolve;setEventSubscriber(eventSubscriberContext);} layoutSizeController();user_effect(() => {var _a;const viewer = new Viewer(CesiumCore,{scene3DOnly: true,timeline: timeline(),sceneModePicker: false,baseLayerPicker: false,baseLayer: false,infoBox: false,animation: false,geocoder: showGeocoder() ? IonGeocodeProviderType.GOOGLE : false,homeButton: showHomeButton(),navigationHelpButton: showNavigationHelpButton()});viewer.cesiumWidget.creditContainer.style.display = "none";coreState.viewer = viewer;if (enableEventSubscriber() && resolveEventSubscriber) {let hasInitialized = false;const initEventSubscriber = () => {if (hasInitialized) return;hasInitialized = true;try {set(eventSubscriber,proxy(new EventSubscriber(viewer,{pickResult: {enable: true,moveDebounce: 16},...eventSubscriberOptions()})));resolveEventSubscriber(get(eventSubscriber));} catch (error) {console.error(atob("RmFpbGVkIHRvIGluaXRpYWxpemUgRXZlbnRTdWJzY3JpYmVyOg=="),error);setTimeout( () => {if (!hasInitialized && viewer.canvas) {try {set(eventSubscriber,proxy(new EventSubscriber(viewer,{pickResult: {enable: true,moveDebounce: 16},...eventSubscriberOptions()})));resolveEventSubscriber(get(eventSubscriber));hasInitialized = true;} catch (fallbackError) {console.error(atob("RmFsbGJhY2sgRXZlbnRTdWJzY3JpYmVyIGluaXRpYWxpemF0aW9uIGZhaWxlZDo="),fallbackError);}}},100 );}};const removePostRenderListener = viewer.scene.postRender.addEventListener(initEventSubscriber);setTimeout( () => {if (!hasInitialized) {console.warn(atob("RXZlbnRTdWJzY3JpYmVyIHBvc3RSZW5kZXIgdGltZW91dCwgdXNpbmcgYmFja3VwIGluaXRpYWxpemF0aW9u"));initEventSubscriber();} removePostRenderListener();},1e3 );} viewer.scene.globe.baseColor = Color.fromCssColorString(atob("IzAwMDAwMA=="));viewer.scene.globe.depthTestAgainstTerrain = false;viewer.scene.fog.minimumBrightness = 0.5;viewer.scene.highDynamicRange = true;if (scene2d()) {if (homePosition()) {homePosition().orientation = {heading: ((_a = homePosition().orientation) == null ? void 0 : _a.heading) || 0,pitch: 90};} viewer.scene.screenSpaceCameraController.enableTilt = false;} else {viewer.scene.globe.enableLighting = true;viewer.scene.globe.showGroundAtmosphere = true;viewer.scene.globe.dynamicAtmosphereLighting = true;viewer.scene.fog.density = 1e-3;viewer.scene.sunBloom = true;disableDepth() && viewer.scene.postProcessStages.add(PostProcessStageLibrary.createDepthOfFieldStage());const lensFlare = viewer.scene.postProcessStages.add(PostProcessStageLibrary.createLensFlareStage());lensFlare.uniforms.intensity = 7;lensFlare.uniforms.distortion = 20;lensFlare.uniforms.ghostDispersal = 0.01;} tick().then(() => {var _a2;(_a2 = onviewer()) == null ? void 0 : _a2(viewer);});const viewModelCommandControllerRes = homePosition() && viewModelCommandController(viewer,homePosition(),initNotFly());viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(ScreenSpaceEventType.LEFT_DOUBLE_CLICK);if (disableSelectEntity()) {viewer.screenSpaceEventHandler.removeInputAction(ScreenSpaceEventType.LEFT_CLICK);} const onSelectedEntityChanged = () => {var _a2;const newSelectedId = (_a2 = viewer.selectedEntity) == null ? void 0 : _a2.id;if (selectedId() !== newSelectedId) {selectedId(newSelectedId);}};viewer.selectedEntityChanged.addEventListener(onSelectedEntityChanged);return () => {viewModelCommandControllerRes && viewModelCommandControllerRes.destroy();viewer.selectedEntityChanged.removeEventListener(onSelectedEntityChanged);if (get(eventSubscriber) && !get(eventSubscriber).isDestroyed) {get(eventSubscriber).destroy();set(eventSubscriber,void 0);} coreState.viewer = void 0;if (!viewer.isDestroyed()) {viewer.destroy();}};});user_effect(() => {var _a;const viewer = coreState.viewer;if (viewer) {if (selectedId() && ((_a = viewer.selectedEntity) == null ? void 0 : _a.id) !== selectedId()) {const entity = viewer.entities.getById(selectedId());viewer.selectedEntity = entity;} else if (!selectedId() && viewer.selectedEntity) {viewer.selectedEntity = void 0;}}});var div = root();var node = child(div);snippet(node,() => children() ?? noop);reset(div);bind_this(div,($$value) => CesiumCore = $$value,() => CesiumCore);append($$anchor,div);return pop({get ION_TOKEN() {return ION_TOKEN();},set ION_TOKEN($$value) {ION_TOKEN($$value);flush_sync();},get homePosition() {return homePosition();},set homePosition($$value) {homePosition($$value);flush_sync();},get onviewer() {return onviewer();},set onviewer($$value) {onviewer($$value);flush_sync();},get initNotFly() {return initNotFly();},set initNotFly($$value) {initNotFly($$value);flush_sync();},get children() {return children();},set children($$value) {children($$value);flush_sync();},get disableDepth() {return disableDepth();},set disableDepth($$value) {disableDepth($$value);flush_sync();},get disableSelectEntity() {return disableSelectEntity();},set disableSelectEntity($$value = false) {disableSelectEntity($$value);flush_sync();},get timeline() {return timeline();},set timeline($$value = false) {timeline($$value);flush_sync();},get showHomeButton() {return showHomeButton();},set showHomeButton($$value = true) {showHomeButton($$value);flush_sync();},get showGeocoder() {return showGeocoder();},set showGeocoder($$value = true) {showGeocoder($$value);flush_sync();},get showNavigationHelpButton() {return showNavigationHelpButton();},set showNavigationHelpButton($$value = true) {showNavigationHelpButton($$value);flush_sync();},get selectedId() {return selectedId();},set selectedId($$value) {selectedId($$value);flush_sync();},get scene2d() {return scene2d();},set scene2d($$value = false) {scene2d($$value);flush_sync();},get enableEventSubscriber() {return enableEventSubscriber();},set enableEventSubscriber($$value = true) {enableEventSubscriber($$value);flush_sync();},get eventSubscriberOptions() {return eventSubscriberOptions();},set eventSubscriberOptions($$value) {eventSubscriberOptions($$value);flush_sync();}});} create_custom_element( CesiumCoreView,{ION_TOKEN: {},homePosition: {},onviewer: {},initNotFly: {},children: {},disableDepth: {},disableSelectEntity: {},timeline: {},showHomeButton: {},showGeocoder: {},showNavigationHelpButton: {},selectedId: {},scene2d: {},enableEventSubscriber: {},eventSubscriberOptions: {}},[],[],true );const CESIUM_CORE_VERSION = atob("MS43LjE=");console.log( atob("JWMg8J+MjSBGRVQgSURUVCBEVEEgREdPUyBDb3JlIFZpZXcgJWMgMS43LjEg"),atob("YmFja2dyb3VuZDogIzAwNTI5YjsgY29sb3I6ICNmZmZmZmY7IHBhZGRpbmc6IDRweCA4cHg7IGJvcmRlci1yYWRpdXM6IDhweCAwIDAgOHB4OyBmb250LXdlaWdodDogYm9sZDsgZm9udC1zaXplOiAxMnB4Ow=="),atob("YmFja2dyb3VuZDogI2Y3ZjdmNzsgY29sb3I6ICMwMDUyOWI7IHBhZGRpbmc6IDRweCA4cHg7IGJvcmRlci1yYWRpdXM6IDAgOHB4IDhweCAwOyBmb250LXNpemU6IDEycHg7") );const index = Object.freeze( Object.defineProperty({__proto__: null,CESIUM_CORE_VERSION,default: CesiumCoreView},Symbol.toStringTag,{value: "Module"}));export {BaseImageryTileset as B,Camera as C,ImageryStyle as I,Model as M,TimeController as T,parseCsvToModels as a,TerrainTileset as b,index as i,parseCsvToMappingPoints as p};